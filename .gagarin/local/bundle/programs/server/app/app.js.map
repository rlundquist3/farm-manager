{"version":3,"sources":["meteor://ðŸ’»app/imports/api/areaData.js","meteor://ðŸ’»app/imports/api/climateData.js","meteor://ðŸ’»app/api/rest.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,KAAT,QAAsB,cAAtB;AACA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAM,WAAW,IAAI,MAAM,UAAV,CAAqB,WAArB,CAAjB;AACP,OAAO,IAAM,gBAAgB,IAAI,MAAM,UAAV,CAAqB,gBAArB,CAAtB;;AAEP,IAAI,OAAO,QAAX,EAAqB;AACnB,SAAO,OAAP,CAAe,UAAf,EAA2B,SAAS,mBAAT,GAA+B;AACxD,WAAO,SAAS,IAAT,EAAP;AACD,GAFD;AAGA,SAAO,OAAP,CAAe,eAAf,EAAgC,SAAS,wBAAT,GAAoC;AAClE,WAAO,cAAc,IAAd,EAAP;AACD,GAFD;AAGD;;AAED,OAAO,OAAP,CAAe;AACb,mBADa,0BACK,IADL,EACW;AACtB,UAAM,IAAN,EAAY,MAAZ;;AAEA,QAAI,CAAE,KAAK,MAAX,EAAmB;AACjB,YAAM,IAAI,OAAO,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAED,QAAI,OAAO,IAAI,IAAJ,EAAX;AACA,QAAI,QAAQ,IAAI,IAAJ,CAAS,KAAK,WAAL,EAAT,EAA6B,KAAK,QAAL,EAA7B,EAA8C,KAAK,OAAL,EAA9C,CAAZ;AACA,QAAI,WAAW,IAAI,IAAJ,CAAS,KAAK,WAAL,EAAT,EAA6B,KAAK,QAAL,EAA7B,EAA8C,KAAK,OAAL,EAA9C,CAAf;AACA,aAAS,OAAT,CAAiB,SAAS,OAAT,KAAmB,CAApC;;AAEA,QAAM,UAAU,SAAS,OAAT,CAAiB;AAC/B,iBAAW;AACT,cAAM,KADG;AAET,aAAK;AAFI,OADoB;AAK/B,YAAM,KAAK;AALoB,KAAjB,CAAhB;;AAQA,QAAI,OAAJ,EAAa;AACX,UAAI,UAAU;AACZ,eAAO,OAAO,QAAQ,KAAf,IAAwB,OAAO,KAAK,KAAZ,CADnB;AAEZ,gBAAQ,OAAO,QAAQ,MAAf,IAAyB,OAAO,KAAK,MAAZ,CAFrB;AAGZ,cAAM,OAAO,QAAQ,IAAf,IAAuB,OAAO,KAAK,IAAZ,CAHjB;AAIZ,iBAAS,OAAO,QAAQ,OAAf,IAA0B,OAAO,KAAK,OAAZ,CAJvB;AAKZ,cAAM,OAAO,QAAQ,IAAf,IAAuB,OAAO,KAAK,IAAZ,CALjB;AAMZ,mBAAW,OAAO,QAAQ,SAAf,IAA4B,OAAO,KAAK,SAAZ,CAN3B;AAOZ,gBAAQ,OAAO,QAAQ,MAAf,IAAyB,OAAO,KAAK,MAAZ,CAPrB;AAQZ,eAAO,OAAO,QAAQ,KAAf,IAAwB,OAAO,KAAK,KAAZ,CARnB;AASZ,cAAM,OAAO,QAAQ,IAAf,IAAuB,OAAO,KAAK,IAAZ;AATjB,OAAd;;AAYA,eAAS,MAAT,CAAgB,QAAQ,GAAxB,EAA6B;AAC3B,cAAM;AACJ,iBAAO,QAAQ,KADX;AAEJ,kBAAQ,QAAQ,MAFZ;AAGJ,gBAAM,QAAQ,IAHV;AAIJ,mBAAS,QAAQ,OAJb;AAKJ,gBAAM,QAAQ,IALV;AAMJ,qBAAW,QAAQ,SANf;AAOJ,kBAAQ,QAAQ,MAPZ;AAQJ,iBAAO,QAAQ,KARX;AASJ,gBAAM,QAAQ;AATV;AADqB,OAA7B;AAaD,KA1BD,MA0BO;AACL,eAAS,MAAT,CAAgB;AACd,cAAM,KAAK,IADG;AAEd,eAAO,OAAO,KAAK,KAAZ,CAFO;AAGd,gBAAQ,OAAO,KAAK,MAAZ,CAHM;AAId,cAAM,OAAO,KAAK,IAAZ,CAJQ;AAKd,iBAAS,OAAO,KAAK,OAAZ,CALK;AAMd,mBAAW,OAAO,KAAK,SAAZ,CANG;AAOd,gBAAQ,OAAO,KAAK,MAAZ,CAPM;AAQd,eAAO,OAAO,KAAK,KAAZ,CARO;AASd,cAAM,OAAO,KAAK,IAAZ,CATQ;AAUd,cAAM,OAAO,KAAK,IAAZ,CAVQ;AAWd,mBAAW,IAAI,IAAJ,EAXG;AAYd,eAAO,KAAK,MAZE;AAad,kBAAU,OAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,MAA1B,EAAkC;AAb9B,OAAhB;AAeD;;AAED,QAAM,mBAAmB,cAAc,OAAd,CAAsB;AAC7C,iBAAW;AACT,cAAM,KADG;AAET,aAAK;AAFI;AADkC,KAAtB,CAAzB;;AAOA,QAAI,gBAAJ,EAAsB;AACpB,UAAI,UAAU;AACZ,eAAO,OAAO,iBAAiB,KAAxB,IAAiC,OAAO,KAAK,KAAZ,CAD5B;AAEZ,gBAAQ,OAAO,iBAAiB,MAAxB,IAAkC,OAAO,KAAK,MAAZ,CAF9B;AAGZ,cAAM,OAAO,iBAAiB,IAAxB,IAAgC,OAAO,KAAK,IAAZ,CAH1B;AAIZ,iBAAS,OAAO,iBAAiB,OAAxB,IAAmC,OAAO,KAAK,OAAZ,CAJhC;AAKZ,cAAM,OAAO,iBAAiB,IAAxB,IAAgC,OAAO,KAAK,IAAZ,CAL1B;AAMZ,mBAAW,OAAO,iBAAiB,SAAxB,IAAqC,OAAO,KAAK,SAAZ,CANpC;AAOZ,gBAAQ,OAAO,iBAAiB,MAAxB,IAAkC,OAAO,KAAK,MAAZ,CAP9B;AAQZ,eAAO,OAAO,iBAAiB,KAAxB,IAAiC,OAAO,KAAK,KAAZ,CAR5B;AASZ,cAAM,OAAO,iBAAiB,IAAxB,IAAgC,OAAO,KAAK,IAAZ;AAT1B,OAAd;;AAYA,oBAAc,MAAd,CAAqB,iBAAiB,GAAtC,EAA2C;AACzC,cAAM;AACJ,iBAAO,QAAQ,KADX;AAEJ,kBAAQ,QAAQ,MAFZ;AAGJ,gBAAM,QAAQ,IAHV;AAIJ,mBAAS,QAAQ,OAJb;AAKJ,gBAAM,QAAQ,IALV;AAMJ,qBAAW,QAAQ,SANf;AAOJ,kBAAQ,QAAQ,MAPZ;AAQJ,iBAAO,QAAQ,KARX;AASJ,gBAAM,QAAQ;AATV;AADmC,OAA3C;AAaD,KA1BD,MA0BO;AACL,oBAAc,MAAd,CAAqB;AACnB,eAAO,OAAO,KAAK,KAAZ,CADY;AAEnB,gBAAQ,OAAO,KAAK,MAAZ,CAFW;AAGnB,cAAM,OAAO,KAAK,IAAZ,CAHa;AAInB,iBAAS,OAAO,KAAK,OAAZ,CAJU;AAKnB,mBAAW,OAAO,KAAK,SAAZ,CALQ;AAMnB,gBAAQ,OAAO,KAAK,MAAZ,CANW;AAOnB,eAAO,OAAO,KAAK,KAAZ,CAPY;AAQnB,cAAM,OAAO,KAAK,IAAZ,CARa;AASnB,cAAM,OAAO,KAAK,IAAZ,CATa;AAUnB,mBAAW,IAAI,IAAJ,EAVQ;AAWnB,eAAO,KAAK,MAXO;AAYnB,kBAAU,OAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,MAA1B,EAAkC;AAZzB,OAArB;AAcD;AACF;AAlHY,CAAf,+G;;;;;;;;;;;;;;;ACZA,IAAI,QAAQ,QAAQ,cAAR,CAAZ;AACA,IAAI,UAAU,QAAQ,gBAAR,CAAd;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;;AAGA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;AAGA,IAAI,cAAc,QAAQ,WAAR,GAAsB,IAAI,MAAM,UAAV,CAAqB,cAArB,CAAxC;;AAEA,IAAI,OAAO,QAAX,EAAqB;AACnB,SAAO,OAAP,CAAe,aAAf,EAA8B,SAAS,sBAAT,GAAkC;AAC9D,WAAO,YAAY,IAAZ,EAAP;AACD,GAFD;AAGD;;AAED,QAAQ,MAAR,CAAe,aAAf,EAA8B,WAA9B,EAA2C;AACzC,QAAM;AAAA,WAAM,MAAM,MAAN,CAAa,MAAb,EAAN;AAAA,GADmC;AAEzC,YAAU;AAAA,WAAM,MAAM,MAAN,CAAa,MAAb,EAAN;AAAA,GAF+B;AAGzC,aAAW;AAAA,WAAM,IAAI,IAAJ,EAAN;AAAA;AAH8B,CAA3C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA,SAAS,WAAT,QAA4B,+BAA5B;;AAEA,IAAI,OAAO,QAAX,EAAqB;AACnB,MAAI,MAAM,IAAI,QAAJ,CAAa;AACrB,oBAAgB,IADK;AAErB,gBAAY;;AAFS,GAAb,CAAV;;AAMA,MAAI,aAAJ,CAAkB,WAAlB,EAA+B;AAC7B,kBAAc,KADe;AAE7B,uBAAmB,CAAC,WAAD,EAAc,QAAd,CAFU;AAG7B,eAAW;AACT,YAAM;AACJ,sBAAc,IADV;AAEJ,gBAAQ,kBAAY;AAClB,cAAI,OAAO,YAAY,MAAZ,CAAmB;AAC5B,kBAAM,KAAK,UAAL,CAAgB,IADM;AAE5B,sBAAU,KAAK,UAAL,CAAgB,QAFE;AAG5B,kBAAM,KAAK,UAAL,CAAgB,IAHM;AAI5B,uBAAW,IAAI,IAAJ,EAJiB;AAK5B,sBAAU,KAAK,IAAL,CAAU;AALQ,WAAnB,CAAX;AAOA,iBAAO,IAAP;AACD;AAXG;AADG;AAHkB,GAA/B;;AAoBA,MAAI,aAAJ,CAAkB,OAAO,KAAzB,EAAgC;AAC9B,uBAAmB,CAAC,QAAD,EAAW,KAAX,CADW;AAE9B,kBAAc;AACZ,oBAAc;AADF,KAFgB;AAK9B,eAAW;AACT,YAAM;AACJ,sBAAc;AADV,OADG;AAIT,gBAAQ;AACN,sBAAc;AADR;AAJC;AALmB,GAAhC;AAcD,gH;;;;;;;;;;;AC3CD,SAAS,MAAT,QAAuB,eAAvB;AACA,OAAO,+BAAP;AACA,OAAO,4BAAP;;AAEA,OAAO,OAAP,CAAe,YAAM;;AAEpB,CAFD,8G","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const AreaData = new Mongo.Collection('area_data');\nexport const AggregateData = new Mongo.Collection('aggregate_data');\n\nif (Meteor.isServer) {\n  Meteor.publish('areaData', function areaDataPublication() {\n    return AreaData.find();\n  });\n  Meteor.publish('aggregateData', function aggregateDataPublication() {\n    return AggregateData.find();\n  });\n}\n\nMeteor.methods({\n  'areaData.insert'(data) {\n    check(data, Object);\n\n    if (! this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    var date = new Date();\n    var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    var tomorrow = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    tomorrow.setDate(tomorrow.getDate()+1);\n\n    const oldData = AreaData.findOne({\n      createdAt: {\n        $gte: today,\n        $lt: tomorrow\n      },\n      area: data.area,\n    });\n\n    if (oldData) {\n      var newData = {\n        water: Number(oldData.water) + Number(data.water),\n        energy: Number(oldData.energy) + Number(data.energy),\n        feed: Number(oldData.feed) + Number(data.feed),\n        insects: Number(oldData.insects) + Number(data.insects),\n        eggs: Number(oldData.eggs) + Number(data.eggs),\n        harvested: Number(oldData.harvested) + Number(data.harvested),\n        moveOn: Number(oldData.moveOn) + Number(data.moveOn),\n        frass: Number(oldData.frass) + Number(data.frass),\n        dead: Number(oldData.dead) + Number(data.dead),\n    }\n\n      AreaData.update(oldData._id, {\n        $set: {\n          water: newData.water,\n          energy: newData.energy,\n          feed: newData.feed,\n          insects: newData.insects,\n          eggs: newData.eggs,\n          harvested: newData.harvested,\n          moveOn: newData.moveOn,\n          frass: newData.frass,\n          dead: newData.dead,\n        }\n      });\n    } else {\n      AreaData.insert({\n        area: data.area,\n        water: Number(data.water),\n        energy: Number(data.energy),\n        feed: Number(data.feed),\n        insects: Number(data.insects),\n        harvested: Number(data.harvested),\n        moveOn: Number(data.moveOn),\n        frass: Number(data.frass),\n        eggs: Number(data.eggs),\n        dead: Number(data.dead),\n        createdAt: new Date(),\n        owner: this.userId,\n        username: Meteor.users.findOne(this.userId).username,\n      });\n    }\n\n    const oldAggregateData = AggregateData.findOne({\n      createdAt: {\n        $gte: today,\n        $lt: tomorrow\n      },\n    });\n\n    if (oldAggregateData) {\n      var newData = {\n        water: Number(oldAggregateData.water) + Number(data.water),\n        energy: Number(oldAggregateData.energy) + Number(data.energy),\n        feed: Number(oldAggregateData.feed) + Number(data.feed),\n        insects: Number(oldAggregateData.insects) + Number(data.insects),\n        eggs: Number(oldAggregateData.eggs) + Number(data.eggs),\n        harvested: Number(oldAggregateData.harvested) + Number(data.harvested),\n        moveOn: Number(oldAggregateData.moveOn) + Number(data.moveOn),\n        frass: Number(oldAggregateData.frass) + Number(data.frass),\n        dead: Number(oldAggregateData.dead) + Number(data.dead),\n    }\n\n      AggregateData.update(oldAggregateData._id, {\n        $set: {\n          water: newData.water,\n          energy: newData.energy,\n          feed: newData.feed,\n          insects: newData.insects,\n          eggs: newData.eggs,\n          harvested: newData.harvested,\n          moveOn: newData.moveOn,\n          frass: newData.frass,\n          dead: newData.dead,\n        }\n      });\n    } else {\n      AggregateData.insert({\n        water: Number(data.water),\n        energy: Number(data.energy),\n        feed: Number(data.feed),\n        insects: Number(data.insects),\n        harvested: Number(data.harvested),\n        moveOn: Number(data.moveOn),\n        frass: Number(data.frass),\n        eggs: Number(data.eggs),\n        dead: Number(data.dead),\n        createdAt: new Date(),\n        owner: this.userId,\n        username: Meteor.users.findOne(this.userId).username,\n      });\n    }\n  },\n});\n","// import { Mongo } from 'meteor/mongo';\n// import { Factory } from 'meteor/factory';\n// import faker from 'faker';\n\nvar Mongo = require('meteor/mongo');\nvar Factory = require('meteor/factory');\nvar faker = require('faker');\n\n// export const ClimateData = new Mongo.Collection('climate_data');\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ClimateData = exports.ClimateData = new Mongo.Collection('climate_data');\n\nif (Meteor.isServer) {\n  Meteor.publish('climateData', function climateDataPublication() {\n    return ClimateData.find();\n  });\n}\n\nFactory.define('climateData', ClimateData, {\n  temp: () => faker.random.number(),\n  humidity: () => faker.random.number(),\n  createdAt: () => new Date(),\n});\n\n// Meteor.methods({\n//   'climateData.insert'(temp, humidity) {\n//\n//     if(! this.userId) {\n//       throw new Meteor.Error('not-authorized');\n//     }\n//\n//     ClimateData.insert({\n//       temp: temp,\n//       humidity: humidity,\n//       createdAt: new Date(),\n//       username: Meteor.users.findOne(this.userId).username,\n//     });\n//   }\n// });\n","import { ClimateData } from '../imports/api/climateData.js';\n\nif (Meteor.isServer) {\n  var Api = new Restivus({\n    useDefaultAuth: true,\n    prettyJson: true,\n\n  });\n\n  Api.addCollection(ClimateData, {\n    authRequired: false,\n    excludedEndpoints: ['deleteAll', 'delete'],\n    endpoints: {\n      post: {\n        authRequired: true,\n        action: function () {\n          var data = ClimateData.insert({\n            temp: this.bodyParams.temp,\n            humidity: this.bodyParams.humidity,\n            area: this.bodyParams.area,\n            createdAt: new Date(),\n            username: this.user.username,\n          });\n          return true;\n        }\n      }\n    }\n  });\n\n  Api.addCollection(Meteor.users, {\n    excludedEndpoints: ['getAll', 'put'],\n    routeOptions: {\n      authRequired: true\n    },\n    endpoints: {\n      post: {\n        authRequired: false\n      },\n      delete: {\n        roleRequired: 'admin'\n      }\n    }\n  });\n}\n","import { Meteor } from 'meteor/meteor';\nimport '../imports/api/climateData.js';\nimport '../imports/api/areaData.js';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}