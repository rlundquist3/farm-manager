{"version":3,"sources":["meteor://ðŸ’»app/client/template.main.js","meteor://ðŸ’»app/client/main.jsx","meteor://ðŸ’»app/imports/api/areaData.js","meteor://ðŸ’»app/imports/api/climateData.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/imports/ui/AccountsUIWrapper.jsx","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/imports/ui/Charts.jsx","meteor://ðŸ’»app/imports/ui/ClimateChart.jsx","meteor://ðŸ’»app/imports/ui/DataInput.jsx","meteor://ðŸ’»app/imports/ui/Floorplan.jsx","meteor://ðŸ’»app/imports/ui/Header.jsx","meteor://ðŸ’»app/imports/ui/InputChart.jsx","meteor://ðŸ’»app/imports/ui/YieldChart.jsx","meteor://ðŸ’»app/api/rest.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,MAAT,QAAuB,WAAvB;;AAEA,OAAO,uCAAP;AACA,OAAO,GAAP,MAAgB,uBAAhB;;AAEA,OAAO,OAAP,CAAe,YAAM;AACnB,SAAO,oBAAC,GAAD,OAAP,EAAgB,SAAS,cAAT,CAAwB,eAAxB,CAAhB;AACD,CAFD,2H;;;;;;;;;;;ACPA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,KAAT,QAAsB,cAAtB;AACA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAM,WAAW,IAAI,MAAM,UAAV,CAAqB,WAArB,CAAjB;AACP,OAAO,IAAM,gBAAgB,IAAI,MAAM,UAAV,CAAqB,gBAArB,CAAtB;;AAEP,IAAI,OAAO,QAAX,EAAqB;AACnB,SAAO,OAAP,CAAe,UAAf;AAA2B,aAAS,mBAAT,GAA+B;AACxD,aAAO,SAAS,IAAT,EAAP;AACD;;AAFD,WAAoC,mBAApC;AAAA;AAGA,SAAO,OAAP,CAAe,eAAf;AAAgC,aAAS,wBAAT,GAAoC;AAClE,aAAO,cAAc,IAAd,EAAP;AACD;;AAFD,WAAyC,wBAAzC;AAAA;AAGD;;AAED,OAAO,OAAP,CAAe;AACb,mBADa;AAAA,4BACK,IADL,EACW;AACtB,YAAM,IAAN,EAAY,MAAZ;;AAEA,UAAI,CAAE,KAAK,MAAX,EAAmB;AACjB,cAAM,IAAI,OAAO,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAED,UAAI,OAAO,IAAI,IAAJ,EAAX;AACA,UAAI,QAAQ,IAAI,IAAJ,CAAS,KAAK,WAAL,EAAT,EAA6B,KAAK,QAAL,EAA7B,EAA8C,KAAK,OAAL,EAA9C,CAAZ;AACA,UAAI,WAAW,IAAI,IAAJ,CAAS,KAAK,WAAL,EAAT,EAA6B,KAAK,QAAL,EAA7B,EAA8C,KAAK,OAAL,EAA9C,CAAf;AACA,eAAS,OAAT,CAAiB,SAAS,OAAT,KAAmB,CAApC;;AAEA,UAAM,UAAU,SAAS,OAAT,CAAiB;AAC/B,mBAAW;AACT,gBAAM,KADG;AAET,eAAK;AAFI,SADoB;AAK/B,cAAM,KAAK;AALoB,OAAjB,CAAhB;;AAQA,UAAI,OAAJ,EAAa;AACX,YAAI,UAAU;AACZ,iBAAO,OAAO,QAAQ,KAAf,IAAwB,OAAO,KAAK,KAAZ,CADnB;AAEZ,kBAAQ,OAAO,QAAQ,MAAf,IAAyB,OAAO,KAAK,MAAZ,CAFrB;AAGZ,gBAAM,OAAO,QAAQ,IAAf,IAAuB,OAAO,KAAK,IAAZ,CAHjB;AAIZ,mBAAS,OAAO,QAAQ,OAAf,IAA0B,OAAO,KAAK,OAAZ,CAJvB;AAKZ,gBAAM,OAAO,QAAQ,IAAf,IAAuB,OAAO,KAAK,IAAZ,CALjB;AAMZ,qBAAW,OAAO,QAAQ,SAAf,IAA4B,OAAO,KAAK,SAAZ,CAN3B;AAOZ,kBAAQ,OAAO,QAAQ,MAAf,IAAyB,OAAO,KAAK,MAAZ,CAPrB;AAQZ,iBAAO,OAAO,QAAQ,KAAf,IAAwB,OAAO,KAAK,KAAZ,CARnB;AASZ,gBAAM,OAAO,QAAQ,IAAf,IAAuB,OAAO,KAAK,IAAZ;AATjB,SAAd;;AAYA,iBAAS,MAAT,CAAgB,QAAQ,GAAxB,EAA6B;AAC3B,gBAAM;AACJ,mBAAO,QAAQ,KADX;AAEJ,oBAAQ,QAAQ,MAFZ;AAGJ,kBAAM,QAAQ,IAHV;AAIJ,qBAAS,QAAQ,OAJb;AAKJ,kBAAM,QAAQ,IALV;AAMJ,uBAAW,QAAQ,SANf;AAOJ,oBAAQ,QAAQ,MAPZ;AAQJ,mBAAO,QAAQ,KARX;AASJ,kBAAM,QAAQ;AATV;AADqB,SAA7B;AAaD,OA1BD,MA0BO;AACL,iBAAS,MAAT,CAAgB;AACd,gBAAM,KAAK,IADG;AAEd,iBAAO,OAAO,KAAK,KAAZ,CAFO;AAGd,kBAAQ,OAAO,KAAK,MAAZ,CAHM;AAId,gBAAM,OAAO,KAAK,IAAZ,CAJQ;AAKd,mBAAS,OAAO,KAAK,OAAZ,CALK;AAMd,qBAAW,OAAO,KAAK,SAAZ,CANG;AAOd,kBAAQ,OAAO,KAAK,MAAZ,CAPM;AAQd,iBAAO,OAAO,KAAK,KAAZ,CARO;AASd,gBAAM,OAAO,KAAK,IAAZ,CATQ;AAUd,gBAAM,OAAO,KAAK,IAAZ,CAVQ;AAWd,qBAAW,IAAI,IAAJ,EAXG;AAYd,iBAAO,KAAK,MAZE;AAad,oBAAU,OAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,MAA1B,EAAkC;AAb9B,SAAhB;AAeD;;AAED,UAAM,mBAAmB,cAAc,OAAd,CAAsB;AAC7C,mBAAW;AACT,gBAAM,KADG;AAET,eAAK;AAFI;AADkC,OAAtB,CAAzB;;AAOA,UAAI,gBAAJ,EAAsB;AACpB,YAAI,UAAU;AACZ,iBAAO,OAAO,iBAAiB,KAAxB,IAAiC,OAAO,KAAK,KAAZ,CAD5B;AAEZ,kBAAQ,OAAO,iBAAiB,MAAxB,IAAkC,OAAO,KAAK,MAAZ,CAF9B;AAGZ,gBAAM,OAAO,iBAAiB,IAAxB,IAAgC,OAAO,KAAK,IAAZ,CAH1B;AAIZ,mBAAS,OAAO,iBAAiB,OAAxB,IAAmC,OAAO,KAAK,OAAZ,CAJhC;AAKZ,gBAAM,OAAO,iBAAiB,IAAxB,IAAgC,OAAO,KAAK,IAAZ,CAL1B;AAMZ,qBAAW,OAAO,iBAAiB,SAAxB,IAAqC,OAAO,KAAK,SAAZ,CANpC;AAOZ,kBAAQ,OAAO,iBAAiB,MAAxB,IAAkC,OAAO,KAAK,MAAZ,CAP9B;AAQZ,iBAAO,OAAO,iBAAiB,KAAxB,IAAiC,OAAO,KAAK,KAAZ,CAR5B;AASZ,gBAAM,OAAO,iBAAiB,IAAxB,IAAgC,OAAO,KAAK,IAAZ;AAT1B,SAAd;;AAYA,sBAAc,MAAd,CAAqB,iBAAiB,GAAtC,EAA2C;AACzC,gBAAM;AACJ,mBAAO,QAAQ,KADX;AAEJ,oBAAQ,QAAQ,MAFZ;AAGJ,kBAAM,QAAQ,IAHV;AAIJ,qBAAS,QAAQ,OAJb;AAKJ,kBAAM,QAAQ,IALV;AAMJ,uBAAW,QAAQ,SANf;AAOJ,oBAAQ,QAAQ,MAPZ;AAQJ,mBAAO,QAAQ,KARX;AASJ,kBAAM,QAAQ;AATV;AADmC,SAA3C;AAaD,OA1BD,MA0BO;AACL,sBAAc,MAAd,CAAqB;AACnB,iBAAO,OAAO,KAAK,KAAZ,CADY;AAEnB,kBAAQ,OAAO,KAAK,MAAZ,CAFW;AAGnB,gBAAM,OAAO,KAAK,IAAZ,CAHa;AAInB,mBAAS,OAAO,KAAK,OAAZ,CAJU;AAKnB,qBAAW,OAAO,KAAK,SAAZ,CALQ;AAMnB,kBAAQ,OAAO,KAAK,MAAZ,CANW;AAOnB,iBAAO,OAAO,KAAK,KAAZ,CAPY;AAQnB,gBAAM,OAAO,KAAK,IAAZ,CARa;AASnB,gBAAM,OAAO,KAAK,IAAZ,CATa;AAUnB,qBAAW,IAAI,IAAJ,EAVQ;AAWnB,iBAAO,KAAK,MAXO;AAYnB,oBAAU,OAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,MAA1B,EAAkC;AAZzB,SAArB;AAcD;AACF;;AAlHY;AAAA;AAAA,CAAf,2H;;;;;;;;;;;;;;;ACZA,IAAI,QAAQ,QAAQ,cAAR,CAAZ;AACA,IAAI,UAAU,QAAQ,gBAAR,CAAd;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;;AAGA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;AAGA,IAAI,cAAc,QAAQ,WAAR,GAAsB,IAAI,MAAM,UAAV,CAAqB,cAArB,CAAxC;;AAEA,IAAI,OAAO,QAAX,EAAqB;AACnB,SAAO,OAAP,CAAe,aAAf;AAA8B,aAAS,sBAAT,GAAkC;AAC9D,aAAO,YAAY,IAAZ,EAAP;AACD;;AAFD,WAAuC,sBAAvC;AAAA;AAGD;;AAED,QAAQ,MAAR,CAAe,aAAf,EAA8B,WAA9B,EAA2C;AACzC;AAAM;AAAA,aAAM,MAAM,MAAN,CAAa,MAAb,EAAN;AAAA;;AAAN;AAAA,KADyC;AAEzC;AAAU;AAAA,aAAM,MAAM,MAAN,CAAa,MAAb,EAAN;AAAA;;AAAV;AAAA,KAFyC;AAGzC;AAAW;AAAA,aAAM,IAAI,IAAJ,EAAN;AAAA;;AAAX;AAAA;AAHyC,CAA3C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA,SAAS,QAAT,QAAyB,sBAAzB;;AAEA,SAAS,EAAT,CAAY,MAAZ,CAAmB;AACjB,wBAAsB;AADL,CAAnB,0H;;;;;;;;;;;;;;ACFA,OAAO,KAAP,IAAgB,SAAhB,QAAiC,OAAjC;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,SAAS,QAAT,QAAyB,mBAAzB;AACA,SAAS,KAAT,QAAsB,cAAtB;;IAEqB,iB;;;;;;;;;8BACnB,iB;iCAAoB;AAClB,WAAK,IAAL,GAAY,MAAM,MAAN,CAAa,SAAS,YAAtB,EACV,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,CADU,CAAZ;AAED;;;;;8BACD,oB;oCAAuB;AACrB,YAAM,MAAN,CAAa,KAAK,IAAlB;AACD;;;;;8BACD,M;sBAAS;AACP,aAAO,8BAAM,KAAI,WAAV,GAAP;AACD;;;;;;EAV4C,S;;eAA1B,iB;;;;;;;;;;;;;;ACLrB,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,SAAS,WAAT,QAA4B,uBAA5B;AACA,SAAS,QAAT,EAAmB,aAAnB,QAAwC,oBAAxC;AACA,OAAO,SAAP,MAAsB,iBAAtB;AACA,OAAO,YAAP,MAAyB,oBAAzB;AACA,OAAO,UAAP,MAAuB,kBAAvB;AACA,OAAO,UAAP,MAAuB,kBAAvB;AACA,OAAO,SAAP,MAAsB,iBAAtB;AACA,OAAO,iBAAP,MAA8B,yBAA9B;AACA,OAAO,MAAP,MAAmB,cAAnB;AACA,OAAO,MAAP,MAAmB,cAAnB;AACA,SAAS,IAAT,EAAe,GAAf,EAAoB,GAApB,EAAyB,MAAzB,EAAiC,aAAjC,QAAsD,iBAAtD;;IAEM,G;;;;;;;;;gBAEJ,e;6BAAgB,I,EAAM;AACpB,WAAK,QAAL,CAAc,EAAC,WAAW,IAAZ,EAAd;AACD;;;;;gBAED,M;sBAAS;AACP,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE,4BAAC,MAAD,OADF;AAGE;AAAC,cAAD;AAAA;AACE;AAAC,eAAD;AAAA,cAAK,WAAU,WAAf;AACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,QAAQ,CAApB;AACE,kCAAC,SAAD;AADF;AADF,WADF;AAOE;AAAC,eAAD;AAAA,cAAK,WAAU,WAAf;AACE,gCAAC,GAAD,IAAK,IAAI,CAAT,EAAY,QAAQ,CAApB;AADF,WAPF;AAaE;AAAC,eAAD;AAAA,cAAK,WAAU,WAAf;AACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,QAAQ,CAApB;AACE;AAAC,6BAAD;AAAA;AACE;AAAC,wBAAD;AAAA,oBAAQ,SAAS,KAAK,eAAL,CAAqB,CAArB,CAAjB,EAA0C,QAAQ,KAAK,KAAL,CAAW,SAAX,KAAyB,CAA3E;AAAA;AAAA,iBADF;AAEE;AAAC,wBAAD;AAAA,oBAAQ,SAAS,KAAK,eAAL,CAAqB,EAArB,CAAjB,EAA2C,QAAQ,KAAK,KAAL,CAAW,SAAX,KAAyB,EAA5E;AAAA;AAAA,iBAFF;AAGE;AAAC,wBAAD;AAAA,oBAAQ,SAAS,KAAK,eAAL,CAAqB,EAArB,CAAjB,EAA2C,QAAQ,KAAK,KAAL,CAAW,SAAX,KAAyB,EAA5E;AAAA;AAAA,iBAHF;AAIE;AAAC,wBAAD;AAAA,oBAAQ,SAAS,KAAK,eAAL,CAAqB,EAArB,CAAjB,EAA2C,QAAQ,KAAK,KAAL,CAAW,SAAX,KAAyB,EAA5E;AAAA;AAAA,iBAJF;AAKE;AAAC,wBAAD;AAAA,oBAAQ,SAAS,KAAK,eAAL,CAAqB,GAArB,CAAjB,EAA4C,QAAQ,KAAK,KAAL,CAAW,SAAX,KAAyB,GAA7E;AAAA;AAAA,iBALF;AAME;AAAC,wBAAD;AAAA,oBAAQ,SAAS,KAAK,eAAL,CAAqB,GAArB,CAAjB,EAA4C,QAAQ,KAAK,KAAL,CAAW,SAAX,KAAyB,GAA7E;AAAA;AAAA;AANF;AADF;AADF,WAbF;AA0BE;AAAC,eAAD;AAAA,cAAK,WAAU,WAAf;AACE,gCAAC,GAAD,IAAK,IAAI,CAAT,EAAY,QAAQ,CAApB;AADF,WA1BF;AAgCE,8BAAC,MAAD,IAAQ,WAAW,KAAK,KAAL,CAAW,SAA9B;AAhCF;AAHF,OADF;AAyCD;;;;;;EAhDe,S;;AAmDlB,IAAI,SAAJ,GAAgB;AACd,eAAa,UAAU,KAAV,CAAgB,UADf;AAEd,aAAW,UAAU,MAAV,CAAiB,UAFd;AAGd,aAAW,UAAU,MAHP;AAId,eAAa,UAAU;AAJT,CAAhB;;AAOA,eAAe,gBAAgB,YAAM;AACnC,SAAO,SAAP,CAAiB,aAAjB;AACA,SAAO,SAAP,CAAiB,UAAjB;AACA,SAAO,SAAP,CAAiB,eAAjB;;AAEA,SAAO;AACL,iBAAa,YAAY,IAAZ,CAAiB,EAAjB,EAAqB,EAAC,MAAM,EAAE,WAAW,CAAC,CAAd,EAAP,EAArB,EAAiD,KAAjD,EADR;AAEL,eAAW;AACT,kBAAY,iBADH;AAET,gBAAU,gBAFD;AAGT,gBAAU,gBAHD;AAIT,gBAAU;AAJD,KAFN;AAQL,eAAW,CARN;AASL,iBAAa,OAAO,IAAP;AATR,GAAP;AAWD,CAhBc,EAgBZ,GAhBY,CAAf,qH;;;;;;;;;;;;;;ACxEA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,SAAS,WAAT,QAA4B,uBAA5B;AACA,SAAS,QAAT,EAAmB,aAAnB,QAAwC,oBAAxC;AACA,OAAO,YAAP,MAAyB,oBAAzB;AACA,OAAO,UAAP,MAAuB,kBAAvB;AACA,OAAO,UAAP,MAAuB,kBAAvB;AACA,OAAO,SAAP,MAAsB,iBAAtB;AACA,SAAS,IAAT,EAAe,GAAf,EAAoB,GAApB,EAAyB,MAAzB,EAAiC,QAAjC,EAA2C,IAA3C,EAAiD,GAAjD,QAA4D,iBAA5D;;IAEM,M;;;;;;;;;mBACJ,kB;gCAAmB,I,EAAM;AACvB,UAAI,OAAO,YAAY,IAAZ,CAAiB,EAAC,MAAM,IAAP,EAAjB,EAA+B,EAAC,MAAM,EAAE,WAAW,CAAC,CAAd,EAAP,EAA/B,EAA2D,KAA3D,EAAX;;AAEA,aACE,oBAAC,YAAD,IAAc,aAAa,IAA3B,EAAiC,OAAO,KAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,IAA6B,UAArE,GADF;AAGD;;;;;mBAED,gB;8BAAiB,I,EAAM;AACrB,UAAI,OAAO,SAAS,IAAT,CAAc,EAAC,MAAM,IAAP,EAAd,EAA4B,EAAC,MAAM,EAAE,WAAW,CAAC,CAAd,EAAP,EAA0B,OAAO,KAAK,KAAL,CAAW,SAA5C,EAA5B,EAAqF,KAArF,EAAX;;AAEA,aACE,oBAAC,UAAD,IAAY,MAAM,IAAlB,EAAwB,OAAO,KAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,IAA6B,SAA5D,GADF;AAGD;;;;;mBAED,gB;8BAAiB,I,EAAM;AACrB,UAAI,OAAO,SAAS,IAAT,CAAc,EAAC,MAAM,IAAP,EAAd,EAA4B,EAAC,MAAM,EAAE,WAAW,CAAC,CAAd,EAAP,EAA0B,OAAO,KAAK,KAAL,CAAW,SAA5C,EAA5B,EAAqF,KAArF,EAAX;;AAEA,aACE,oBAAC,UAAD,IAAY,MAAM,IAAlB,EAAwB,OAAO,KAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,IAA6B,SAA5D,GADF;AAGD;;;;;mBAED,0B;0CAA6B;AAC3B,UAAI,OAAO,cAAc,IAAd,CAAmB,EAAnB,EAAuB,EAAC,MAAM,EAAE,WAAW,CAAC,CAAd,EAAP,EAA0B,OAAO,KAAK,KAAL,CAAW,SAA5C,EAAvB,EAAgF,KAAhF,EAAX;;AAEA,aACE,oBAAC,UAAD,IAAY,MAAM,IAAlB,EAAwB,OAAO,cAA/B,GADF;AAGD;;;;;mBAED,yB;yCAA4B;AAC1B,UAAI,OAAO,cAAc,IAAd,CAAmB,EAAnB,EAAuB,EAAC,MAAM,EAAE,WAAW,CAAC,CAAd,EAAP,EAA0B,OAAO,KAAK,KAAL,CAAW,SAA5C,EAAvB,EAAgF,KAAhF,EAAX;;AAEA,aACE,oBAAC,UAAD,IAAY,MAAM,IAAlB,EAAwB,OAAO,cAA/B,GADF;AAGD;;;;;mBAED,Y;0BAAa,G,EAAK;AAChB,WAAK,QAAL,CAAc,EAAC,QAAD,EAAd;AACD;;;;;mBAED,M;sBAAS;AAAA;;AACP,aACE;AAAA;AAAA;AACE;AAAC,aAAD;AAAA,YAAK,WAAU,WAAf;AACE;AAAC,eAAD;AAAA,cAAK,IAAI,CAAT,EAAY,QAAQ,CAApB;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAC,kBAAD;AAAA;AACE;AAAC,mBAAD;AAAA,kBAAK,UAAS,cAAd,EAA6B,OAAM,QAAnC;AAA6C,qBAAK,0BAAL;AAA7C,eADF;AAEE;AAAC,mBAAD;AAAA,kBAAK,UAAS,cAAd,EAA6B,OAAM,QAAnC;AAA6C,qBAAK,yBAAL;AAA7C;AAFF;AAFF;AADF,SADF;AAUE;AAAC,aAAD;AAAA,YAAK,WAAU,WAAf;AACG,iBAAO,IAAP,CAAY,KAAK,KAAL,CAAW,SAAvB,EAAkC,GAAlC,CAAsC,UAAC,IAAD,EAAU;AAC/C,mBACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,QAAQ,CAApB;AACE;AAAC,mBAAD;AAAA;AACE;AAAC,qBAAD;AAAA,oBAAK,IAAI,CAAT;AACE;AAAA;AAAA;AAAK,2BAAK,KAAL,CAAW,SAAX,CAAqB,IAArB;AAAL;AADF;AADF,eADF;AAME;AAAC,mBAAD;AAAA;AACE;AAAC,qBAAD;AAAA,oBAAK,IAAI,CAAT,EAAY,QAAQ,CAApB;AACE,sCAAC,SAAD,IAAW,WAAU,MAArB,EAA4B,MAAM,IAAlC;AADF;AADF,eANF;AAWE;AAAC,oBAAD;AAAA;AACE;AAAC,qBAAD;AAAA,oBAAK,UAAU,OAAO,QAAtB,EAAgC,OAAM,QAAtC;AAAgD,yBAAK,gBAAL,CAAsB,IAAtB;AAAhD,iBADF;AAEE;AAAC,qBAAD;AAAA,oBAAK,UAAU,OAAO,QAAtB,EAAgC,OAAM,QAAtC;AAAgD,yBAAK,gBAAL,CAAsB,IAAtB;AAAhD,iBAFF;AAGE;AAAC,qBAAD;AAAA,oBAAK,UAAU,OAAO,SAAtB,EAAiC,OAAM,SAAvC;AAAkD,yBAAK,kBAAL,CAAwB,IAAxB;AAAlD;AAHF;AAXF,aADF;AAmBD,WApBA;AADH;AAVF,OADF;AAoCD;;;;;;EAlFkB,S;;AAqFrB,OAAO,SAAP,GAAmB;AACjB,eAAa,UAAU,KAAV,CAAgB,UADZ;AAEjB,aAAW,UAAU,MAAV,CAAiB,UAFX;AAGjB,aAAW,UAAU,MAHJ;AAIjB,eAAa,UAAU;AAJN,CAAnB;;AAOA,eAAe,gBAAgB,YAAM;AACnC,SAAO,SAAP,CAAiB,aAAjB;AACA,SAAO,SAAP,CAAiB,UAAjB;AACA,SAAO,SAAP,CAAiB,eAAjB;;AAEA,SAAO;AACL,iBAAa,YAAY,IAAZ,CAAiB,EAAjB,EAAqB,EAAC,MAAM,EAAE,WAAW,CAAC,CAAd,EAAP,EAArB,EAAiD,KAAjD,EADR;AAEL,eAAW;AACT,kBAAY,iBADH;AAET,gBAAU,gBAFD;AAGT,gBAAU,gBAHD;AAIT,gBAAU;AAJD,KAFN;AAQL,eAAW,CARN;AASL,iBAAa,OAAO,IAAP;AATR,GAAP;AAWD,CAhBc,EAgBZ,MAhBY,CAAf,mH;;;;;;;;;;;;;;ACtGA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,SAAS,IAAT,QAAqB,eAArB;AACA,SAAS,WAAT,QAA4B,uBAA5B;;IAEqB,Y;;;;;;;;;yBAEnB,U;0BAAa;AACX,aAAO;AACL,cAAM,KAAK,KAAL,CAAW,WAAX,CAAuB,MADxB;AAEL,mBAAW,KAAK,KAAL,CAAW,WAAX,CAAuB,GAAvB,CAA2B,UAAC,OAAD;AAAA,iBAAa,QAAQ,SAArB;AAAA,SAA3B,CAFN;AAGL,cAAM,KAAK,KAAL,CAAW,WAAX,CAAuB,GAAvB,CAA2B,UAAC,OAAD;AAAA,iBAAa,QAAQ,IAArB;AAAA,SAA3B,CAHD;AAIL,kBAAU,KAAK,KAAL,CAAW,WAAX,CAAuB,GAAvB,CAA2B,UAAC,OAAD;AAAA,iBAAa,QAAQ,QAAR,GAAiB,GAA9B;AAAA,SAA3B;AAJL,OAAP;AAMD;;;;;yBAED,a;6BAAgB;AACd,aAAO;AACL,gBAAQ,MAAM,KAAK,UAAL,GAAkB,IAAxB,EAA8B,IAA9B,CAAmC,EAAnC,CADH;AAEL,kBAAU,CACR;AACE,iBAAO,aADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,IAN1B;AAOE,mBAAS;AAPX,SADQ,EAUR;AACE,iBAAO,UADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,QAN1B;AAOE,mBAAS;AAPX,SAVQ;AAFL,OAAP;AAuBD;;;;;yBAED,Y;4BAAe;AACb,aAAO;AACL,eAAO;AACL,mBAAS,KADJ;AAEL,gBAAM,KAAK,KAAL,CAAW;AAFZ,SADF;AAKL,oBAAY,IALP;AAML,gBAAQ;AACN,iBAAO,CACL;AACE,gBAAI,UADN;AAEE,sBAAU,MAFZ;AAGE,wBAAY;AACV,uBAAS,IADC;AAEV,2BAAa;AAFH,aAHd;AAOE,mBAAO;AACL,mBAAK,EADA;AAEL,mBAAK,GAFA;AAGL,wBAAU;AAHL;AAPT,WADK,EAcL;AACE,gBAAI,UADN;AAEE,sBAAU,OAFZ;AAGE,wBAAY;AACV,uBAAS,IADC;AAEV,2BAAa;AAFH,aAHd;AAOE,mBAAO;AACL,mBAAK,EADA;AAEL,mBAAK,GAFA;AAGL,wBAAU;AAHL;AAPT,WAdK;AADD;AANH,OAAP;AAqCD;;;;;yBAED,M;sBAAS;AACP,aACE,oBAAC,IAAD,IAAM,MAAM,KAAK,aAAL,EAAZ,EAAkC,WAAU,UAA5C,EAAuD,SAAS,KAAK,YAAL,EAAhE,GADF;AAGD;;;;;;EAjFuC,S;;eAArB,Y;;;AAoFrB,aAAa,SAAb,GAAyB;AACvB,eAAa,UAAU,KAAV,CAAgB,UADN;AAEvB,SAAO,UAAU,MAAV,CAAiB;AAFD,CAAzB,2H;;;;;;;;;;;;;;ACzFA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,SAAS,WAAT,QAA4B,uBAA5B;AACA,SAAS,QAAT,QAAyB,oBAAzB;AACA,SAAS,MAAT,EAAiB,KAAjB,EAAwB,IAAxB,EAA8B,SAA9B,EAAyC,UAAzC,EAAqD,YAArD,EAAmE,WAAnE,EAAgF,GAAhF,QAA2F,iBAA3F;;IAEM,S;;;AACJ,qBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAEjB,UAAK,KAAL,GAAa,EAAE,WAAW,KAAb,EAAb;;AAEA,UAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AACA,UAAK,SAAL,GAAiB,MAAK,SAAL,CAAe,IAAf,OAAjB;AACA,UAAK,SAAL,GAAiB,MAAK,SAAL,CAAe,IAAf,OAAjB;AANiB;AAOlB;;sBAED,Y;0BAAa,K,EAAO;AAClB,YAAM,cAAN;;AAEA,UAAM,OAAO;AACX,cAAM,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KADrC;AAEX,eAAO,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,UAA/B,EAA2C,KAA3C,CAAiD,IAAjD,EAFI;AAGX,gBAAQ,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,WAA/B,EAA4C,KAA5C,CAAkD,IAAlD,EAHG;AAIX,cAAM,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,CAAgD,IAAhD,EAJK;AAKX,iBAAS,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,WAA/B,EAA4C,KAA5C,CAAkD,IAAlD,EALE;AAMX,mBAAW,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,cAA/B,EAA+C,KAA/C,CAAqD,IAArD,EANA;AAOX,gBAAQ,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,WAA/B,EAA4C,KAA5C,CAAkD,IAAlD,EAPG;AAQX,eAAO,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,UAA/B,EAA2C,KAA3C,CAAiD,IAAjD,EARI;AASX,cAAM,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,CAAgD,IAAhD,EATK;AAUX,cAAM,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,CAAgD,IAAhD;AAVK,OAAb;;AAaA,aAAO,IAAP,CAAY,iBAAZ,EAA+B,IAA/B;;;AAGA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,UAA/B,EAA2C,KAA3C,GAAmD,EAAnD;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,WAA/B,EAA4C,KAA5C,GAAoD,EAApD;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,GAAkD,EAAlD;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,WAA/B,EAA4C,KAA5C,GAAoD,EAApD;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,cAA/B,EAA+C,KAA/C,GAAuD,EAAvD;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,WAA/B,EAA4C,KAA5C,GAAoD,EAApD;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,UAA/B,EAA2C,KAA3C,GAAmD,EAAnD;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,GAAkD,EAAlD;AACA,eAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,GAAkD,EAAlD;;AAEA,WAAK,SAAL;AACD;;;;;sBAED,S;yBAAY;AACV,WAAK,QAAL,CAAc,EAAE,WAAW,IAAb,EAAd;AACD;;;;;sBAED,S;yBAAY;AACV,WAAK,QAAL,CAAc,EAAE,WAAW,KAAb,EAAd;AACD;;;;;sBAED,M;sBAAS;AACP,aACE;AAAA;AAAA,UAAK,WAAU,MAAf;AACI,aAAK,KAAL,CAAW,WAAX,GACA;AAAA;AAAA;AACE;AAAC,kBAAD;AAAA;AACE,uBAAQ,SADV;AAEE,sBAAO,OAFT;AAGE,uBAAS,KAAK;AAHhB;AAAA;AAAA,WADF;AAUE;AAAC,iBAAD;AAAA,cAAO,MAAM,KAAK,KAAL,CAAW,SAAxB,EAAmC,QAAQ,KAAK,SAAhD;AACE;AAAC,mBAAD,CAAO,MAAP;AAAA,gBAAc,iBAAd;AACE;AAAC,qBAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AADF,aADF;AAIE;AAAC,mBAAD,CAAO,IAAP;AAAA;AACE;AAAC,oBAAD;AAAA,kBAAM,gBAAN;AACE;AAAC,2BAAD;AAAA,oBAAW,WAAU,WAArB;AACE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBADF;AAIE;AAAC,uBAAD;AAAA,sBAAK,IAAI,EAAT;AACE;AAAC,iCAAD;AAAA,wBAAa,KAAI,WAAjB,EAA6B,gBAAe,QAA5C,EAAqD,aAAY,MAAjE,EAAwE,OAAO,KAAK,KAAL,CAAW,IAA1F;AACE;AAAA;AAAA,0BAAQ,OAAM,YAAd;AAAA;AAAA,uBADF;AAEE;AAAA;AAAA,0BAAQ,OAAM,UAAd;AAAA;AAAA,uBAFF;AAGE;AAAA;AAAA,0BAAQ,OAAM,UAAd;AAAA;AAAA,uBAHF;AAIE;AAAA;AAAA,0BAAQ,OAAM,UAAd;AAAA;AAAA;AAJF;AADF;AAJF,iBADF;AAcE;AAAC,2BAAD;AAAA,oBAAW,WAAU,YAArB;AACE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBADF;AAIE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,YAAjB,EAA8B,MAAK,QAAnC,EAA4C,aAAY,OAAxD;AADF,mBAJF;AAOE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBAPF;AAUE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,aAAjB,EAA+B,MAAK,QAApC,EAA6C,aAAY,QAAzD;AADF;AAVF,iBAdF;AA4BE;AAAC,2BAAD;AAAA,oBAAW,WAAU,WAArB;AACE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBADF;AAIE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,WAAjB,EAA6B,MAAK,QAAlC,EAA2C,aAAY,MAAvD;AADF,mBAJF;AAOE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBAPF;AAUE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,aAAjB,EAA+B,MAAK,QAApC,EAA6C,aAAY,SAAzD;AADF;AAVF,iBA5BF;AA0CE;AAAC,2BAAD;AAAA,oBAAW,WAAU,gBAArB;AACE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBADF;AAIE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,gBAAjB,EAAkC,MAAK,QAAvC,EAAgD,aAAY,WAA5D;AADF,mBAJF;AAOE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBAPF;AAUE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,aAAjB,EAA+B,MAAK,QAApC,EAA6C,aAAY,WAAzD;AADF;AAVF,iBA1CF;AAwDE;AAAC,2BAAD;AAAA,oBAAW,WAAU,YAArB;AACE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBADF;AAIE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,YAAjB,EAA8B,MAAK,QAAnC,EAA4C,aAAY,OAAxD;AADF,mBAJF;AAOE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBAPF;AAUE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,WAAjB,EAA6B,MAAK,QAAlC,EAA2C,aAAY,MAAvD;AADF;AAVF,iBAxDF;AAsEE;AAAC,2BAAD;AAAA,oBAAW,WAAU,WAArB;AACE;AAAC,uBAAD;AAAA,sBAAK,gBAAgB,YAArB,EAAmC,IAAI,CAAvC;AAAA;AAAA,mBADF;AAIE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT;AACE,wCAAC,WAAD,IAAa,KAAI,WAAjB,EAA6B,MAAK,QAAlC,EAA2C,aAAY,MAAvD;AADF;AAJF,iBAtEF;AA8EE;AAAC,2BAAD;AAAA,oBAAW,WAAU,QAArB;AACE;AAAC,uBAAD;AAAA,sBAAK,IAAI,CAAT,EAAY,QAAQ,EAApB;AACE;AAAC,4BAAD;AAAA,wBAAQ,SAAS,KAAK,YAAtB,EAAoC,SAAQ,SAA5C;AAAA;AAAA;AADF;AADF;AA9EF;AADF,aAJF;AA4FE;AAAC,mBAAD,CAAO,MAAP;AAAA;AACE;AAAC,sBAAD;AAAA,kBAAQ,SAAS,KAAK,SAAtB;AAAA;AAAA;AADF;AA5FF;AAVF,SADA,GA2GS;AA5Gb,OADF;AAiHD;;;;;;EApKqB,S;;AAuKxB,UAAU,SAAV,GAAsB;AACpB,QAAM,UAAU,MADI;AAEpB,eAAa,UAAU;AAFH,CAAtB;;AAKA,eAAe,gBAAgB,YAAM;AACnC,SAAO;AACL,iBAAa,OAAO,IAAP;AADR,GAAP;AAGD,CAJc,EAIZ,SAJY,CAAf,gH;;;;;;;;;;;;;;ACnLA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,SAAS,MAAT,EAAiB,QAAjB,QAAiC,WAAjC;AACA,OAAO,SAAP,MAAsB,iBAAtB;AACA,SAAS,MAAT,EAAiB,KAAjB,EAAwB,IAAxB,EAA8B,SAA9B,EAAyC,UAAzC,EAAqD,YAArD,EAAmE,WAAnE,EAAgF,GAAhF,QAA2F,iBAA3F;;IAEqB,S;;;AACnB,qBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAEjB,UAAK,KAAL,GAAa,EAAE,WAAW,KAAb,EAAb;;AAEA,UAAK,SAAL,GAAiB,MAAK,SAAL,CAAe,IAAf,OAAjB;AACA,UAAK,SAAL,GAAiB,MAAK,SAAL,CAAe,IAAf,OAAjB;AALiB;AAMlB;;sBAED,iB;iCAAoB;;AAElB,UAAI,kBAAkB,SAAS,cAAT,CAAwB,iBAAxB,CAAtB;AACA,sBAAgB,KAAhB,GAAwB,SAAS,cAAT,CAAwB,WAAxB,EAAqC,WAA7D;AACA,sBAAgB,MAAhB,GAAyB,SAAS,cAAT,CAAwB,WAAxB,EAAqC,YAA9D;AACA,YAAM,KAAN,CAAY,eAAZ;;AAEA,UAAM,0BAA0B,GAAhC;;AAEA,YAAM,IAAN,CAAW,IAAX;;AAEA,UAAI,UAAU,IAAd;AACA,UAAI,OAAO;AACT,gBAAQ,IAAE,uBADD;AAET,eAAO,IAAE,uBAFA;AAGT,eAAO;AAHE,OAAX;AAKA,UAAI,WAAW;AACb,WAAG,CADU;AAEb,WAAG;AAFU,OAAf;;AAKA,UAAI;AAAc,iBAAd,WAAc,GAAW;AAC3B,cAAI,UAAU,IAAI,MAAM,IAAN,CAAW,SAAf,CAAyB;AACrC,qBAAS,CAAC,SAAS,CAAV,EAAa,SAAS,CAAtB,CAD4B;AAErC,yBAAa,CAAC,SAAS,CAAT,GAAW,KAAK,KAAjB,EAAwB,SAAS,CAAT,GAAW,KAAK,MAAxC,CAFwB;AAGrC,yBAAa;AAHwB,WAAzB,CAAd;;AAMA,oBAAU,IAAI,MAAM,KAAV,CAAgB,CAAC,OAAD,CAAhB,CAAV;AACD;;AARG;AAAA,SAAJ;;AAUA,UAAI;AAAY,iBAAZ,SAAY,GAAW;AACzB,cAAI,QAAQ;AACV,wBAAY,QAAQ,QAAR,CAAiB,IAAI,MAAM,KAAV,EAAjB,CADF;AAEV,sBAAU,QAAQ,QAAR,CAAiB,IAAI,MAAM,KAAV,EAAjB,CAFA;AAGV,sBAAU,QAAQ,QAAR,CAAiB,IAAI,MAAM,KAAV,EAAjB,CAHA;AAIV,sBAAU,QAAQ,QAAR,CAAiB,IAAI,MAAM,KAAV,EAAjB;AAJA,WAAZ;;AAOA,cAAI,WAAW;AACb,wBAAY,MAAM,UAAN,CAAiB,QAAjB,CAA0B,IAAI,MAAM,IAAN,CAAW,SAAf,CAAyB;AAC7D,uBAAS,CAAC,SAAS,CAAT,GAAW,KAAK,KAAjB,EAAwB,SAAS,CAAT,GAAW,IAAE,KAAK,KAAlB,GAAwB,OAAK,KAAK,MAA1D,CADoD;AAE7D,2BAAa,CAAC,SAAS,CAAT,GAAW,KAAK,KAAhB,GAAsB,OAAK,KAAK,KAAjC,EAAwC,SAAS,CAAT,GAAW,IAAE,KAAK,KAAlB,GAAwB,OAAK,KAAK,MAA1E,CAFgD;AAG7D,2BAAa;AAHgD,aAAzB,CAA1B,CADC;AAMb,sBAAU,MAAM,QAAN,CAAe,QAAf,CAAwB,IAAI,MAAM,IAAN,CAAW,SAAf,CAAyB;AACzD,uBAAS,CAAC,SAAS,CAAT,GAAW,KAAK,KAAjB,EAAwB,SAAS,CAAT,GAAW,KAAK,KAAhB,GAAsB,MAAI,KAAK,MAAvD,CADgD;AAEzD,2BAAa,CAAC,SAAS,CAAT,GAAW,KAAK,KAAhB,GAAsB,OAAK,KAAK,KAAjC,EAAwC,SAAS,CAAT,GAAW,IAAE,KAAK,KAAlB,GAAwB,OAAK,KAAK,MAA1E,CAF4C;AAGzD,2BAAa;AAH4C,aAAzB,CAAxB,CANG;AAWb,sBAAU,MAAM,QAAN,CAAe,QAAf,CAAwB,IAAI,MAAM,IAAN,CAAW,SAAf,CAAyB;AACzD,uBAAS,CAAC,SAAS,CAAT,GAAW,KAAK,KAAjB,EAAwB,SAAS,CAAT,GAAW,KAAK,KAAxC,CADgD;AAEzD,2BAAa,CAAC,SAAS,CAAT,GAAW,KAAK,KAAhB,GAAsB,KAAK,KAA5B,EAAmC,SAAS,CAAT,GAAW,MAAI,KAAK,MAAvD,CAF4C;AAGzD,2BAAa;AAH4C,aAAzB,CAAxB,CAXG;AAgBb,sBAAU,MAAM,QAAN,CAAe,QAAf,CAAwB,IAAI,MAAM,IAAN,CAAW,SAAf,CAAyB;AACzD,uBAAS,CAAC,SAAS,CAAT,GAAW,OAAK,KAAK,KAAtB,EAA6B,SAAS,CAAT,GAAW,KAAK,KAAhB,GAAsB,MAAI,KAAK,MAA5D,CADgD;AAEzD,2BAAa,CAAC,SAAS,CAAT,GAAW,KAAK,KAAhB,GAAsB,KAAK,KAA5B,EAAmC,SAAS,CAAT,GAAW,IAAE,KAAK,KAAlB,GAAwB,MAAI,KAAK,MAApE,CAF4C;AAGzD,2BAAa;AAH4C,aAAzB,CAAxB;AAhBG,WAAf;;AAuBA,cAAI,OAAO;AACT,wBAAY,MAAM,UAAN,CAAiB,QAAjB,CAA0B,IAAI,MAAM,SAAV,CAAoB;AACxD,qBAAO,MAAM,UAAN,CAAiB,MAAjB,CAAwB,UADyB;AAExD,uBAAS,iBAF+C;AAGxD,yBAAW,OAH6C;AAIxD,wBAAU;AAJ8C,aAApB,CAA1B,CADH;AAOT,sBAAU,MAAM,QAAN,CAAe,QAAf,CAAwB,IAAI,MAAM,SAAV,CAAoB;AACpD,qBAAO,MAAM,QAAN,CAAe,MAAf,CAAsB,UADuB;AAEpD,uBAAS,gBAF2C;AAGpD,yBAAW,OAHyC;AAIpD,wBAAU;AAJ0C,aAApB,CAAxB,CAPD;AAaT,sBAAU,MAAM,QAAN,CAAe,QAAf,CAAwB,IAAI,MAAM,SAAV,CAAoB;AACpD,qBAAO,MAAM,QAAN,CAAe,MAAf,CAAsB,UADuB;AAEpD,uBAAS,gBAF2C;AAGpD,yBAAW,OAHyC;AAIpD,wBAAU;AAJ0C,aAApB,CAAxB,CAbD;AAmBT,sBAAU,MAAM,QAAN,CAAe,QAAf,CAAwB,IAAI,MAAM,SAAV,CAAoB;AACpD,qBAAO,MAAM,QAAN,CAAe,MAAf,CAAsB,UADuB;AAEpD,uBAAS,eAF2C;AAGpD,yBAAW,OAHyC;AAIpD,wBAAU;AAJ0C,aAApB,CAAxB;AAnBD,WAAX;AA0BD;;AAzDG;AAAA,SAAJ;;AA2DA,UAAI;AAAY,iBAAZ,SAAY,GAAW;AACzB,eAAK,QAAL,CAAc,EAAE,WAAW,IAAb,EAAd;AACD;;AAFG;AAAA,SAAJ;;AAIA,UAAI;AAAY,iBAAZ,SAAY,GAAW;AACzB,eAAK,QAAL,CAAc,EAAE,WAAW,KAAb,EAAd;AACD;;AAFG;AAAA,SAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;;;;AAIA,UAAI,OAAO,IAAI,MAAM,IAAV,EAAX;;;;;;;;;;;;;;;AAeA,WAAK,SAAL,GAAiB,UAAS,KAAT,EAAgB;AAC/B,gBAAQ,GAAR,CAAY,MAAM,KAAlB;;AAEA,YAAG,MAAM,KAAN,CAAY,QAAZ,CAAqB,QAAQ,QAAR,CAAiB,CAAjB,EAAoB,MAAzC,CAAH,EAAqD;AACnD,kBAAQ,GAAR,CAAY,YAAZ;AACA;AACD,SAHD,MAGO,IAAI,MAAM,KAAN,CAAY,QAAZ,CAAqB,QAAQ,QAAR,CAAiB,CAAjB,EAAoB,MAAzC,CAAJ,EAAsD;AAC3D,kBAAQ,GAAR,CAAY,UAAZ;AACA,eAAK,SAAL;AACD,SAHM,MAGA,IAAI,MAAM,KAAN,CAAY,QAAZ,CAAqB,QAAQ,QAAR,CAAiB,CAAjB,EAAoB,MAAzC,CAAJ,EAAsD;AAC3D,kBAAQ,GAAR,CAAY,UAAZ;AACA,eAAK,SAAL;AACD,SAHM,MAGA,IAAI,MAAM,KAAN,CAAY,QAAZ,CAAqB,QAAQ,QAAR,CAAiB,CAAjB,EAAoB,MAAzC,CAAJ,EAAsD;AAC3D,kBAAQ,GAAR,CAAY,UAAZ;AACA,eAAK,SAAL;AACD;AACF,OAhBD;AAiBD;;;;;sBAED,S;yBAAY;AACV,WAAK,QAAL,CAAc,EAAE,WAAW,IAAb,EAAd;AACD;;;;;sBAED,S;yBAAY;AACV,WAAK,QAAL,CAAc,EAAE,WAAW,KAAb,EAAd;AACD;;;;;sBAED,M;sBAAS;AACP,aACE;AAAA;AAAA,UAAK,IAAG,WAAR;AACE,wCAAQ,IAAG,iBAAX,EAA6B,QAAO,KAApC,EAA0C,YAA1C;AADF,OADF;AAKD;;;;;;EA/PoC,S;;eAAlB,S;;;;;;;;;;;;;;ACLrB,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,OAAO,iBAAP,MAA8B,yBAA9B;AACA,SAAS,MAAT,EAAiB,GAAjB,EAAsB,OAAtB,QAAqC,iBAArC;;IAEM,M;;;;;;;;;mBACJ,M;sBAAS;AACP,aACE;AAAC,cAAD;AAAA,UAAQ,WAAW,IAAnB;AACE;AAAC,gBAAD,CAAQ,MAAR;AAAA;AACE;AAAC,kBAAD,CAAQ,KAAR;AAAA;AACE;AAAA;AAAA,gBAAG,MAAK,GAAR;AAAA;AAAA;AADF;AADF,SADF;AAME;AAAC,gBAAD,CAAQ,IAAR;AAAA;AACE,8BAAC,iBAAD;AADF;AANF,OADF;AAYD;;;;;;EAdkB,S;;AAiBrB,OAAO,SAAP,GAAmB;AACjB,eAAa,UAAU;AADN,CAAnB;;AAIA,eAAe,gBAAgB,YAAM;AACnC,SAAO;AACL,iBAAa,OAAO,IAAP;AADR,GAAP;AAGD,CAJc,EAIZ,MAJY,CAAf,kH;;;;;;;;;;;;;;AC3BA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,SAAS,IAAT,QAAqB,eAArB;AACA,SAAS,QAAT,QAAyB,oBAAzB;;IAEqB,U;;;;;;;;;uBAEnB,U;0BAAa;AACX,aAAO;AACL,cAAM,KAAK,KAAL,CAAW,IAAX,CAAgB,MADjB;AAEL,mBAAW,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,SAAf;AAAA,SAApB,CAFN;AAGL,eAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,KAAf;AAAA,SAApB,CAHF;AAIL,gBAAQ,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,MAAf;AAAA,SAApB,CAJH;AAKL,cAAM,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,IAAf;AAAA,SAApB;AALD,OAAP;AAOD;;;;;uBAED,Y;4BAAe;AACb,aAAO;AACL,gBAAQ,MAAM,KAAK,UAAL,GAAkB,IAAxB,EAA8B,IAA9B,CAAmC,EAAnC,CADH;AAEL,kBAAU,CACR;AACE,iBAAO,MADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,IAN1B;AAOE,mBAAS;AAPX,SADQ,EAUR;AACE,iBAAO,OADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,KAN1B;AAOE,mBAAS;AAPX,SAVQ,EAmBR;AACE,iBAAO,QADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,MAN1B;AAOE,mBAAS;AAPX,SAnBQ;AAFL,OAAP;AAgCD;;;;;uBAED,Y;4BAAe;AACb,aAAO;AACL,eAAO;AACL,mBAAS,KADJ;AAEL,gBAAM,KAAK,KAAL,CAAW;AAFZ,SADF;AAKL,oBAAY,IALP;AAML,gBAAQ;AACN,iBAAO,CACL;AACE,gBAAI,UADN;AAEE,sBAAU,MAFZ;AAGE,wBAAY;AACV,uBAAS,IADC;AAEV,2BAAa;AAFH,aAHd;AAOE,mBAAO;AACL,mBAAK,CADA;AAEL,mBAAK,GAFA;AAGL,wBAAU;AAHL;AAPT,WADK,EAcL;AACE,gBAAI,UADN;AAEE,sBAAU,OAFZ;AAGE,wBAAY;AACV,uBAAS,IADC;AAEV,2BAAa;AAFH,aAHd;AAOE,mBAAO;AACL,mBAAK,CADA;AAEL,mBAAK,GAFA;AAGL,wBAAU;AAHL;AAPT,WAdK,EA2BL;AACE,gBAAI,UADN;AAEE,sBAAU,OAFZ;AAGE,wBAAY;AACV,uBAAS,IADC;AAEV,2BAAa;AAFH,aAHd;AAOE,mBAAO;AACL,mBAAK,CADA;AAEL,mBAAK,GAFA;AAGL,wBAAU;AAHL;AAPT,WA3BK;AADD;AANH,OAAP;AAkDD;;;;;uBAED,M;sBAAS;AACP,aACE,oBAAC,IAAD,IAAM,MAAM,KAAK,YAAL,EAAZ,EAAiC,WAAU,UAA3C,EAAsD,SAAS,KAAK,YAAL,EAA/D,GADF;AAGD;;;;;;EAxGqC,S;;eAAnB,U;;;AA2GrB,WAAW,SAAX,GAAuB;AACrB,QAAM,UAAU,KAAV,CAAgB,UADD;AAErB,SAAO,UAAU,MAAV,CAAiB;AAFH,CAAvB,4H;;;;;;;;;;;;;;AChHA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,SAAS,eAAT,QAAgC,0BAAhC;AACA,SAAS,IAAT,QAAqB,eAArB;AACA,SAAS,QAAT,QAAyB,oBAAzB;;IAEqB,U;;;;;;;;;uBAEnB,U;0BAAa;AACX,aAAO;AACL,cAAM,KAAK,KAAL,CAAW,IAAX,CAAgB,MADjB;AAEL,mBAAW,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,SAAf;AAAA,SAApB,CAFN;AAGL,iBAAS,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,OAAf;AAAA,SAApB,CAHJ;AAIL,cAAM,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,IAAf;AAAA,SAApB,CAJD;AAKL,cAAM,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,IAAf;AAAA,SAApB,CALD;AAML,eAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,IAAD;AAAA,iBAAU,KAAK,KAAf;AAAA,SAApB;AANF,OAAP;AAQD;;;;;uBAED,a;6BAAgB;AACd,aAAO;AACL,gBAAQ,MAAM,KAAK,UAAL,GAAkB,IAAxB,EAA8B,IAA9B,CAAmC,EAAnC,CADH;AAEL,kBAAU,CACR;AACE,iBAAO,SADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,OAN1B;AAOE,mBAAS;AAPX,SADQ,EAUR;AACE,iBAAO,MADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,IAN1B;AAOE,mBAAS;AAPX,SAVQ,EAmBR;AACE,iBAAO,MADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,IAN1B;AAOE,mBAAS;AAPX,SAnBQ,EA4BR;AACE,iBAAO,OADT;AAEE,2BAAiB,0BAFnB;AAGE,uBAAa,0BAHf;AAIE,sBAAY,wBAJd;AAKE,4BAAkB,oBALpB;AAME,gBAAM,KAAK,UAAL,GAAkB,KAN1B;AAOE,mBAAS;AAPX,SA5BQ;AAFL,OAAP;AAyCD;;;;;uBAED,Y;4BAAe;AACb,aAAO;AACL,eAAO;AACL,mBAAS,KADJ;AAEL,gBAAM,KAAK,KAAL,CAAW;AAFZ,SADF;AAKL,oBAAY,IALP;AAML,gBAAQ;AACN,iBAAO,CACL;AACE,gBAAI,UADN;AAEE,sBAAU,MAFZ;AAGE,wBAAY;AACV,uBAAS,IADC;AAEV,2BAAa;AAFH,aAHd;AAOE,mBAAO;AACL,mBAAK,CADA;AAEL,mBAAK,IAFA;AAGL,wBAAU;AAHL;AAPT,WADK;AADD;AANH,OAAP;AAwBD;;;;;uBAED,M;sBAAS;AACP,aACE,oBAAC,IAAD,IAAM,MAAM,KAAK,aAAL,EAAZ,EAAkC,WAAU,UAA5C,EAAuD,SAAS,KAAK,YAAL,EAAhE,GADF;AAGD;;;;;;EAxFqC,S;;eAAnB,U;;;AA2FrB,WAAW,SAAX,GAAuB;AACrB,QAAM,UAAU,KAAV,CAAgB,UADD;AAErB,SAAO,UAAU,MAAV,CAAiB;AAFH,CAAvB,2H;;;;;;;;;;;AChGA,SAAS,WAAT,QAA4B,+BAA5B;;AAEA,IAAI,OAAO,QAAX,EAAqB;AACnB,MAAI,MAAM,IAAI,QAAJ,CAAa;AACrB,oBAAgB,IADK;AAErB,gBAAY;;AAFS,GAAb,CAAV;;AAMA,MAAI,aAAJ,CAAkB,WAAlB,EAA+B;AAC7B,kBAAc,KADe;AAE7B,uBAAmB,CAAC,WAAD,EAAc,QAAd,CAFU;AAG7B,eAAW;AACT,YAAM;AACJ,sBAAc,IADV;AAEJ;AAAQ,4BAAY;AAClB,gBAAI,OAAO,YAAY,MAAZ,CAAmB;AAC5B,oBAAM,KAAK,UAAL,CAAgB,IADM;AAE5B,wBAAU,KAAK,UAAL,CAAgB,QAFE;AAG5B,oBAAM,KAAK,UAAL,CAAgB,IAHM;AAI5B,yBAAW,IAAI,IAAJ,EAJiB;AAK5B,wBAAU,KAAK,IAAL,CAAU;AALQ,aAAnB,CAAX;AAOA,mBAAO,IAAP;AACD;;AATD;AAAA;AAFI;AADG;AAHkB,GAA/B;;AAoBA,MAAI,aAAJ,CAAkB,OAAO,KAAzB,EAAgC;AAC9B,uBAAmB,CAAC,QAAD,EAAW,KAAX,CADW;AAE9B,kBAAc;AACZ,oBAAc;AADF,KAFgB;AAK9B,eAAW;AACT,YAAM;AACJ,sBAAc;AADV,OADG;AAIT,gBAAQ;AACN,sBAAc;AADR;AAJC;AALmB,GAAhC;AAcD,4H","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<!-- <canvas id=\"canvas\" resize=\"true\" width=\"1000\" height=\"1000\"></canvas> -->\\n  <!-- {{> chart}} -->\\n  <div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.jsx';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const AreaData = new Mongo.Collection('area_data');\nexport const AggregateData = new Mongo.Collection('aggregate_data');\n\nif (Meteor.isServer) {\n  Meteor.publish('areaData', function areaDataPublication() {\n    return AreaData.find();\n  });\n  Meteor.publish('aggregateData', function aggregateDataPublication() {\n    return AggregateData.find();\n  });\n}\n\nMeteor.methods({\n  'areaData.insert'(data) {\n    check(data, Object);\n\n    if (! this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    var date = new Date();\n    var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    var tomorrow = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    tomorrow.setDate(tomorrow.getDate()+1);\n\n    const oldData = AreaData.findOne({\n      createdAt: {\n        $gte: today,\n        $lt: tomorrow\n      },\n      area: data.area,\n    });\n\n    if (oldData) {\n      var newData = {\n        water: Number(oldData.water) + Number(data.water),\n        energy: Number(oldData.energy) + Number(data.energy),\n        feed: Number(oldData.feed) + Number(data.feed),\n        insects: Number(oldData.insects) + Number(data.insects),\n        eggs: Number(oldData.eggs) + Number(data.eggs),\n        harvested: Number(oldData.harvested) + Number(data.harvested),\n        moveOn: Number(oldData.moveOn) + Number(data.moveOn),\n        frass: Number(oldData.frass) + Number(data.frass),\n        dead: Number(oldData.dead) + Number(data.dead),\n    }\n\n      AreaData.update(oldData._id, {\n        $set: {\n          water: newData.water,\n          energy: newData.energy,\n          feed: newData.feed,\n          insects: newData.insects,\n          eggs: newData.eggs,\n          harvested: newData.harvested,\n          moveOn: newData.moveOn,\n          frass: newData.frass,\n          dead: newData.dead,\n        }\n      });\n    } else {\n      AreaData.insert({\n        area: data.area,\n        water: Number(data.water),\n        energy: Number(data.energy),\n        feed: Number(data.feed),\n        insects: Number(data.insects),\n        harvested: Number(data.harvested),\n        moveOn: Number(data.moveOn),\n        frass: Number(data.frass),\n        eggs: Number(data.eggs),\n        dead: Number(data.dead),\n        createdAt: new Date(),\n        owner: this.userId,\n        username: Meteor.users.findOne(this.userId).username,\n      });\n    }\n\n    const oldAggregateData = AggregateData.findOne({\n      createdAt: {\n        $gte: today,\n        $lt: tomorrow\n      },\n    });\n\n    if (oldAggregateData) {\n      var newData = {\n        water: Number(oldAggregateData.water) + Number(data.water),\n        energy: Number(oldAggregateData.energy) + Number(data.energy),\n        feed: Number(oldAggregateData.feed) + Number(data.feed),\n        insects: Number(oldAggregateData.insects) + Number(data.insects),\n        eggs: Number(oldAggregateData.eggs) + Number(data.eggs),\n        harvested: Number(oldAggregateData.harvested) + Number(data.harvested),\n        moveOn: Number(oldAggregateData.moveOn) + Number(data.moveOn),\n        frass: Number(oldAggregateData.frass) + Number(data.frass),\n        dead: Number(oldAggregateData.dead) + Number(data.dead),\n    }\n\n      AggregateData.update(oldAggregateData._id, {\n        $set: {\n          water: newData.water,\n          energy: newData.energy,\n          feed: newData.feed,\n          insects: newData.insects,\n          eggs: newData.eggs,\n          harvested: newData.harvested,\n          moveOn: newData.moveOn,\n          frass: newData.frass,\n          dead: newData.dead,\n        }\n      });\n    } else {\n      AggregateData.insert({\n        water: Number(data.water),\n        energy: Number(data.energy),\n        feed: Number(data.feed),\n        insects: Number(data.insects),\n        harvested: Number(data.harvested),\n        moveOn: Number(data.moveOn),\n        frass: Number(data.frass),\n        eggs: Number(data.eggs),\n        dead: Number(data.dead),\n        createdAt: new Date(),\n        owner: this.userId,\n        username: Meteor.users.findOne(this.userId).username,\n      });\n    }\n  },\n});\n","// import { Mongo } from 'meteor/mongo';\n// import { Factory } from 'meteor/factory';\n// import faker from 'faker';\n\nvar Mongo = require('meteor/mongo');\nvar Factory = require('meteor/factory');\nvar faker = require('faker');\n\n// export const ClimateData = new Mongo.Collection('climate_data');\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ClimateData = exports.ClimateData = new Mongo.Collection('climate_data');\n\nif (Meteor.isServer) {\n  Meteor.publish('climateData', function climateDataPublication() {\n    return ClimateData.find();\n  });\n}\n\nFactory.define('climateData', ClimateData, {\n  temp: () => faker.random.number(),\n  humidity: () => faker.random.number(),\n  createdAt: () => new Date(),\n});\n\n// Meteor.methods({\n//   'climateData.insert'(temp, humidity) {\n//\n//     if(! this.userId) {\n//       throw new Meteor.Error('not-authorized');\n//     }\n//\n//     ClimateData.insert({\n//       temp: temp,\n//       humidity: humidity,\n//       createdAt: new Date(),\n//       username: Meteor.users.findOne(this.userId).username,\n//     });\n//   }\n// });\n","import { Accounts } from 'meteor/accounts-base';\n\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n\nexport default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    Blaze.remove(this.view);\n  }\n  render() {\n    return <span ref=\"container\" />;\n  }\n}\n","import React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { ClimateData } from '../api/climateData.js';\nimport { AreaData, AggregateData } from '../api/areaData.js';\nimport Floorplan from './Floorplan.jsx';\nimport ClimateChart from './ClimateChart.jsx';\nimport YieldChart from './YieldChart.jsx';\nimport InputChart from './InputChart.jsx';\nimport DataInput from './DataInput.jsx';\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\nimport Header from './Header.jsx';\nimport Charts from './Charts.jsx';\nimport { Grid, Row, Col, Button, ButtonToolbar } from 'react-bootstrap';\n\nclass App extends Component {\n\n  changeTimeShown(days) {\n    this.setState({timeShown: days});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n\n        <Grid>\n          <Row className='show-grid'>\n            <Col md={6} mdPush={3}>\n              <Floorplan />\n            </Col>\n          </Row>\n\n          <Row className='show-grid'>\n            <Col md={6} mdPush={3}>\n\n            </Col>\n          </Row>\n\n          <Row className='show-grid'>\n            <Col md={6} mdPush={3}>\n              <ButtonToolbar>\n                <Button onClick={this.changeTimeShown(7)} active={this.props.timeShown === 7}>Week</Button>\n                <Button onClick={this.changeTimeShown(14)} active={this.props.timeShown === 14}>2 Weeks</Button>\n                <Button onClick={this.changeTimeShown(30)} active={this.props.timeShown === 30}>Month</Button>\n                <Button onClick={this.changeTimeShown(90)} active={this.props.timeShown === 90}>3 Months</Button>\n                <Button onClick={this.changeTimeShown(180)} active={this.props.timeShown === 180}>6 Months</Button>\n                <Button onClick={this.changeTimeShown(365)} active={this.props.timeShown === 365}>Year</Button>\n              </ButtonToolbar>\n            </Col>\n          </Row>\n\n          <Row className='show-grid'>\n            <Col md={6} mdPush={3}>\n\n            </Col>\n          </Row>\n\n          <Charts timeShown={this.props.timeShown} />\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  climateData: PropTypes.array.isRequired,\n  areaNames: PropTypes.object.isRequired,\n  timeShown: PropTypes.number,\n  currentUser: PropTypes.object,\n};\n\nexport default createContainer(() => {\n  Meteor.subscribe('climateData');\n  Meteor.subscribe('areaData');\n  Meteor.subscribe('aggregateData');\n\n  return {\n    climateData: ClimateData.find({}, {sort: { createdAt: -1 } }).fetch(),\n    areaNames: {\n      incubation: 'Incubation Area',\n      growout1: 'Growout Area 1',\n      growout2: 'Growout Area 2',\n      breeding: 'Breeding Area',\n    },\n    timeShown: 7,\n    currentUser: Meteor.user(),\n  };\n}, App);\n","import React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { ClimateData } from '../api/climateData.js';\nimport { AreaData, AggregateData } from '../api/areaData.js';\nimport ClimateChart from './ClimateChart.jsx';\nimport YieldChart from './YieldChart.jsx';\nimport InputChart from './InputChart.jsx';\nimport DataInput from './DataInput.jsx';\nimport { Grid, Row, Col, Button, Carousel, Tabs, Tab } from 'react-bootstrap';\n\nclass Charts extends Component {\n  renderClimateChart(area) {\n    var data = ClimateData.find({area: area}, {sort: { createdAt: -1 } }).fetch();\n\n    return (\n      <ClimateChart climateData={data} title={this.props.areaNames[area] + ' Climate'} />\n    );\n  }\n\n  renderYieldChart(area) {\n    var data = AreaData.find({area: area}, {sort: { createdAt: -1 }, limit: this.props.timeShown }).fetch();\n\n    return (\n      <YieldChart data={data} title={this.props.areaNames[area] + ' Yields'} />\n    );\n  }\n\n  renderInputChart(area) {\n    var data = AreaData.find({area: area}, {sort: { createdAt: -1 }, limit: this.props.timeShown }).fetch();\n\n    return (\n      <InputChart data={data} title={this.props.areaNames[area] + ' Inputs'} />\n    );\n  }\n\n  renderInsectAggregateChart() {\n    var data = AggregateData.find({}, {sort: { createdAt: -1 }, limit: this.props.timeShown }).fetch();\n\n    return (\n      <YieldChart data={data} title={'Total Yields'} />\n    );\n  }\n\n  renderInputAggregateChart() {\n    var data = AggregateData.find({}, {sort: { createdAt: -1 }, limit: this.props.timeShown }).fetch();\n\n    return (\n      <InputChart data={data} title={'Total Inputs'} />\n    );\n  }\n\n  handleSelect(key) {\n    this.setState({key});\n  }\n\n  render() {\n    return (\n      <div>\n        <Row className='show-grid'>\n          <Col md={8} mdPush={2}>\n            <h3>Aggregate Data</h3>\n            <Tabs>\n              <Tab eventKey='total yields' title='Yields'>{this.renderInsectAggregateChart()}</Tab>\n              <Tab eventKey='total inputs' title='Inputs'>{this.renderInputAggregateChart()}</Tab>\n            </Tabs>\n          </Col>\n        </Row>\n        <Row className='show-grid'>\n          {Object.keys(this.props.areaNames).map((area) => {\n            return (\n              <Col md={5} mdPush={1}>\n                <Row>\n                  <Col md={5}>\n                    <h3>{this.props.areaNames[area]}</h3>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md={3} mdPush={9}>\n                    <DataInput pullRight='true' area={area} />\n                  </Col>\n                </Row>\n                <Tabs>\n                  <Tab eventKey={area + 'yields'} title='Yields'>{this.renderYieldChart(area)}</Tab>\n                  <Tab eventKey={area + 'inputs'} title='Inputs'>{this.renderInputChart(area)}</Tab>\n                  <Tab eventKey={area + 'climate'} title='Climate'>{this.renderClimateChart(area)}</Tab>\n                </Tabs>\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n}\n\nCharts.propTypes = {\n  climateData: PropTypes.array.isRequired,\n  areaNames: PropTypes.object.isRequired,\n  timeShown: PropTypes.number,\n  currentUser: PropTypes.object,\n};\n\nexport default createContainer(() => {\n  Meteor.subscribe('climateData');\n  Meteor.subscribe('areaData');\n  Meteor.subscribe('aggregateData');\n\n  return {\n    climateData: ClimateData.find({}, {sort: { createdAt: -1 } }).fetch(),\n    areaNames: {\n      incubation: 'Incubation Area',\n      growout1: 'Growout Area 1',\n      growout2: 'Growout Area 2',\n      breeding: 'Breeding Area',\n    },\n    timeShown: 7,\n    currentUser: Meteor.user(),\n  };\n}, Charts);\n","import React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Line } from 'react-chartjs';\nimport { ClimateData } from '../api/climateData.js';\n\nexport default class ClimateChart extends Component {\n\n  formatData() {\n    return {\n      size: this.props.climateData.length,\n      createdAt: this.props.climateData.map((climate) => climate.createdAt),\n      temp: this.props.climateData.map((climate) => climate.temp),\n      humidity: this.props.climateData.map((climate) => climate.humidity*100),\n    }\n  }\n\n  formatClimate() {\n    return {\n      labels: Array(this.formatData().size).fill(''),\n      datasets: [\n        {\n          label: 'temperature',\n          backgroundColor: 'rgba(250, 195, 168, 0.5)',\n          borderColor: 'rgba(250, 195, 168, 0.8)',\n          pointColor: 'rgba(250, 195, 168, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().temp,\n          yAxisID: 'y-axis-0'\n        },\n        {\n          label: 'humidity',\n          backgroundColor: 'rgba(167, 238, 250, 0.5)',\n          borderColor: 'rgba(167, 213, 250, 0.8)',\n          pointColor: 'rgba(167, 213, 250, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().humidity,\n          yAxisID: 'y-axis-1'\n        },\n      ],\n    }\n  }\n\n  chartOptions() {\n    return {\n      title: {\n        display: false,\n        text: this.props.title,\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            id: 'y-axis-0',\n            position: \"left\",\n            scaleLabel: {\n              display: true,\n              labelString: 'temperature (F)',\n            },\n            ticks: {\n              min: 60,\n              max: 100,\n              stepSize: 5\n            }\n          },\n          {\n            id: 'y-axis-1',\n            position: \"right\",\n            scaleLabel: {\n              display: true,\n              labelString: 'humidity (%)',\n            },\n            ticks: {\n              min: 20,\n              max: 100,\n              stepSize: 10\n            }\n          }\n        ]\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Line data={this.formatClimate()} className='unichart' options={this.chartOptions()} />\n    );\n  }\n}\n\nClimateChart.propTypes = {\n  climateData: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { ClimateData } from '../api/climateData.js';\nimport { AreaData } from '../api/areaData.js';\nimport { Button, Modal, Form, FormGroup, FieldGroup, ControlLabel, FormControl, Col } from 'react-bootstrap';\n\nclass DataInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showModal: false };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const data = {\n      area: ReactDOM.findDOMNode(this.refs.areaInput).value,\n      water: ReactDOM.findDOMNode(this.refs.waterInput).value.trim(),\n      energy: ReactDOM.findDOMNode(this.refs.energyInput).value.trim(),\n      feed: ReactDOM.findDOMNode(this.refs.feedInput).value.trim(),\n      insects: ReactDOM.findDOMNode(this.refs.insectInput).value.trim(),\n      harvested: ReactDOM.findDOMNode(this.refs.harvestedInput).value.trim(),\n      moveOn: ReactDOM.findDOMNode(this.refs.moveOnInput).value.trim(),\n      frass: ReactDOM.findDOMNode(this.refs.frassInput).value.trim(),\n      eggs: ReactDOM.findDOMNode(this.refs.eggsInput).value.trim(),\n      dead: ReactDOM.findDOMNode(this.refs.deadInput).value.trim(),\n    }\n\n    Meteor.call('areaData.insert', data);\n\n    // ReactDOM.findDOMNode(this.refs.areaInput).value = '';\n    ReactDOM.findDOMNode(this.refs.waterInput).value = '';\n    ReactDOM.findDOMNode(this.refs.energyInput).value = '';\n    ReactDOM.findDOMNode(this.refs.feedInput).value = '';\n    ReactDOM.findDOMNode(this.refs.insectInput).value = '';\n    ReactDOM.findDOMNode(this.refs.harvestedInput).value = '';\n    ReactDOM.findDOMNode(this.refs.moveOnInput).value = '';\n    ReactDOM.findDOMNode(this.refs.frassInput).value = '';\n    ReactDOM.findDOMNode(this.refs.eggsInput).value = '';\n    ReactDOM.findDOMNode(this.refs.deadInput).value = '';\n\n    this.hideModal();\n  }\n\n  showModal() {\n    this.setState({ showModal: true });\n  }\n\n  hideModal() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <div className='form'>\n        { this.props.currentUser ?\n          <div>\n            <Button\n              bsStyle=\"primary\"\n              bsSize=\"small\"\n              onClick={this.showModal}\n            >\n              Data Input\n            </Button>\n\n\n            <Modal show={this.state.showModal} onHide={this.hideModal}>\n              <Modal.Header closeButton>\n                <Modal.Title>Data Input</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form horizontal>\n                  <FormGroup controlId='areaInput'>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Area\n                    </Col>\n                    <Col sm={10}>\n                      <FormControl ref='areaInput' componentClass='select' placeholder='area' value={this.props.area}>\n                        <option value='incubation'>Incubation Area</option>\n                        <option value='growout1'>Growout Area 1</option>\n                        <option value='growout2'>Growout Area 2</option>\n                        <option value='breeding'>Breeding Area</option>\n                      </FormControl>\n                    </Col>\n                  </FormGroup>\n                  <FormGroup controlId='waterInput'>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Water (gal)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='waterInput' type='number' placeholder='water' />\n                    </Col>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Energy (kWh)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='energyInput' type='number' placeholder='energy' />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup controlId='feedInput'>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Feed (lbs)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='feedInput' type='number' placeholder='feed' />\n                    </Col>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Insects (lbs)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='insectInput' type='number' placeholder='insects' />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup controlId='harvestedInput'>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Harvested (lbs)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='harvestedInput' type='number' placeholder='harvested' />\n                    </Col>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Insects Moving On (lbs)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='moveOnInput' type='number' placeholder='moving on' />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup controlId='frassInput'>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Frass (lbs)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='frassInput' type='number' placeholder='frass' />\n                    </Col>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Eggs (lbs)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='eggsInput' type='number' placeholder='eggs' />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup controlId='deadInput'>\n                    <Col componentClass={ControlLabel} sm={2}>\n                      Dead Insects (lbs)\n                    </Col>\n                    <Col sm={3}>\n                      <FormControl ref='deadInput' type='number' placeholder='dead' />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup controlId='submit'>\n                    <Col sm={2} smPush={10}>\n                      <Button onClick={this.handleSubmit} bsStyle='success'>\n                        Submit\n                      </Button>\n                    </Col>\n                  </FormGroup>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={this.hideModal}>Close</Button>\n              </Modal.Footer>\n            </Modal>\n          </div> : ''\n        }\n      </div>\n    );\n  }\n}\n\nDataInput.propTypes = {\n  area: PropTypes.string,\n  currentUser: PropTypes.object,\n}\n\nexport default createContainer(() => {\n  return {\n    currentUser: Meteor.user(),\n  }\n}, DataInput);\n","import React, { Component, PropTypes } from 'react';\nimport { render, setState } from 'react-dom';\nimport DataInput from './DataInput.jsx';\nimport { Button, Modal, Form, FormGroup, FieldGroup, ControlLabel, FormControl, Col } from 'react-bootstrap';\n\nexport default class Floorplan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showModal: false };\n\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  componentDidMount() {\n\n    var floorplanCanvas = document.getElementById('floorplanCanvas');\n    floorplanCanvas.width = document.getElementById('canvasDiv').clientWidth;\n    floorplanCanvas.height = document.getElementById('canvasDiv').clientHeight;\n    paper.setup(floorplanCanvas);\n\n    const BUILDING_SCALING_FACTOR = 100;\n\n    paper.view.draw();\n\n    var drawing = null;\n    var size = {\n      length: 3*BUILDING_SCALING_FACTOR,\n      width: 2*BUILDING_SCALING_FACTOR,\n      walls: 3,\n    };\n    var position = {\n      x: 0,\n      y: 0,\n    };\n\n    var drawOutline = function() {\n      var outline = new paper.Path.Rectangle({\n        topLeft: [position.x, position.y],\n        bottomRight: [position.x+size.width, position.y+size.length],\n        strokeColor: 'black',\n      });\n\n      drawing = new paper.Group([outline]);\n    };\n\n    var drawRooms = function() {\n      var rooms = {\n        incubation: drawing.addChild(new paper.Group()),\n        growout1: drawing.addChild(new paper.Group()),\n        growout2: drawing.addChild(new paper.Group()),\n        breeding: drawing.addChild(new paper.Group()),\n      };\n\n      var outlines = {\n        incubation: rooms.incubation.addChild(new paper.Path.Rectangle({\n          topLeft: [position.x+size.walls, position.y+3*size.walls+0.55*size.length],\n          bottomRight: [position.x+size.walls+0.45*size.width, position.y+3*size.walls+0.65*size.length],\n          strokeColor: 'black',\n        })),\n        growout1: rooms.growout1.addChild(new paper.Path.Rectangle({\n          topLeft: [position.x+size.walls, position.y+size.walls+0.4*size.length],\n          bottomRight: [position.x+size.walls+0.45*size.width, position.y+2*size.walls+0.55*size.length],\n          strokeColor: 'black',\n        })),\n        growout2: rooms.growout2.addChild(new paper.Path.Rectangle({\n          topLeft: [position.x+size.walls, position.y+size.walls],\n          bottomRight: [position.x+size.width-size.walls, position.y+0.4*size.length],\n          strokeColor: 'black',\n        })),\n        breeding: rooms.breeding.addChild(new paper.Path.Rectangle({\n          topLeft: [position.x+0.55*size.width, position.y+size.walls+0.4*size.length],\n          bottomRight: [position.x+size.width-size.walls, position.y+2*size.walls+0.6*size.length],\n          strokeColor: 'black',\n        })),\n      }\n\n      var text = {\n        incubation: rooms.incubation.addChild(new paper.PointText({\n          point: rooms.incubation.bounds.leftCenter,\n          content: 'Incubation Area',\n          fillColor: 'black',\n          fontSize: '5',\n        })),\n        growout1: rooms.growout1.addChild(new paper.PointText({\n          point: rooms.growout1.bounds.leftCenter,\n          content: 'Growout Area 1',\n          fillColor: 'black',\n          fontSize: '5',\n        })),\n        growout2: rooms.growout2.addChild(new paper.PointText({\n          point: rooms.growout2.bounds.leftCenter,\n          content: 'Growout Area 2',\n          fillColor: 'black',\n          fontSize: '5',\n        })),\n        breeding: rooms.breeding.addChild(new paper.PointText({\n          point: rooms.breeding.bounds.leftCenter,\n          content: 'Breeding Area',\n          fillColor: 'black',\n          fontSize: '5',\n        })),\n      };\n    };\n\n    var showModal = function() {\n      this.setState({ showModal: true });\n    };\n\n    var hideModal = function() {\n      this.setState({ showModal: false });\n    };\n\n    // var floorplan = {\n    //   drawing: null,\n    //   size: {\n    //     length: 3*BUILDING_SCALING_FACTOR,\n    //     width: 2*BUILDING_SCALING_FACTOR,\n    //     walls: 3,\n    //   },\n    //   position: {\n    //     x: 0,\n    //     y: 0,\n    //   },\n    //\n    //   drawOutline: function() {\n    //     var outline = new paper.Path.Rectangle({\n    //       topLeft: [this.position.x, this.position.y],\n    //       bottomRight: [this.position.x+this.size.width, this.position.y+this.size.length],\n    //       strokeColor: 'black',\n    //     });\n    //\n    //     this.drawing = new paper.Group([outline]);\n    //   },\n    //\n    //   drawRooms: function() {\n    //     var rooms = {\n    //       incubation: this.drawing.addChild(new paper.Group()),\n    //       growout1: this.drawing.addChild(new paper.Group()),\n    //       growout2: this.drawing.addChild(new paper.Group()),\n    //       breeding: this.drawing.addChild(new paper.Group()),\n    //     };\n    //\n    //     var outlines = {\n    //       incubation: rooms.incubation.addChild(new paper.Path.Rectangle({\n    //         topLeft: [this.position.x+this.size.walls, this.position.y+3*this.size.walls+0.55*this.size.length],\n    //         bottomRight: [this.position.x+this.size.walls+0.45*this.size.width, this.position.y+3*this.size.walls+0.65*this.size.length],\n    //         strokeColor: 'black',\n    //       })),\n    //       growout1: rooms.growout1.addChild(new paper.Path.Rectangle({\n    //         topLeft: [this.position.x+this.size.walls, this.position.y+this.size.walls+0.4*this.size.length],\n    //         bottomRight: [this.position.x+this.size.walls+0.45*this.size.width, this.position.y+2*this.size.walls+0.55*this.size.length],\n    //         strokeColor: 'black',\n    //       })),\n    //       growout2: rooms.growout2.addChild(new paper.Path.Rectangle({\n    //         topLeft: [this.position.x+this.size.walls, this.position.y+this.size.walls],\n    //         bottomRight: [this.position.x+this.size.width-this.size.walls, this.position.y+0.4*this.size.length],\n    //         strokeColor: 'black',\n    //       })),\n    //       breeding: rooms.breeding.addChild(new paper.Path.Rectangle({\n    //         topLeft: [this.position.x+0.55*this.size.width, this.position.y+this.size.walls+0.4*this.size.length],\n    //         bottomRight: [this.position.x+this.size.width-this.size.walls, this.position.y+2*this.size.walls+0.6*this.size.length],\n    //         strokeColor: 'black',\n    //       })),\n    //     }\n    //\n    //     var text = {\n    //       incubation: rooms.incubation.addChild(new paper.PointText({\n    //         point: rooms.incubation.bounds.leftCenter,\n    //         content: 'Incubation Area',\n    //         fillColor: 'black',\n    //         fontSize: '5',\n    //       })),\n    //       growout1: rooms.growout1.addChild(new paper.PointText({\n    //         point: rooms.growout1.bounds.leftCenter,\n    //         content: 'Growout Area 1',\n    //         fillColor: 'black',\n    //         fontSize: '5',\n    //       })),\n    //       growout2: rooms.growout2.addChild(new paper.PointText({\n    //         point: rooms.growout2.bounds.leftCenter,\n    //         content: 'Growout Area 2',\n    //         fillColor: 'black',\n    //         fontSize: '5',\n    //       })),\n    //       breeding: rooms.breeding.addChild(new paper.PointText({\n    //         point: rooms.breeding.bounds.leftCenter,\n    //         content: 'Breeding Area',\n    //         fillColor: 'black',\n    //         fontSize: '5',\n    //       })),\n    //     };\n    //\n    //     // rooms.incubation.onClick = function(event) {\n    //     //   this.fillColor = 'red';\n    //     // }\n    //   },\n    //\n    //   showModal: function() {\n    //     this.setState({ showModal: true });\n    //   },\n    //\n    //   hideModal: function() {\n    //     this.setState({ showModal: false });\n    //   },\n    // };\n\n    drawOutline();\n    drawRooms();\n\n    // floorplan.drawing.position = paper.view.center;\n\n    var tool = new paper.Tool();\n    // var path;\n    //\n\t\t// // Define a mousedown and mousedrag handler\n    // // Draws pretty lines (test mouse tracking)\n\t\t// tool.onMouseDown = function(event) {\n\t\t// \tpath = new paper.Path();\n\t\t// \tpath.strokeColor = 'black';\n\t\t// \tpath.add(event.point);\n\t\t// }\n    //\n\t\t// tool.onMouseDrag = function(event) {\n\t\t// \tpath.add(event.point);\n\t\t// }\n\n    tool.onMouseUp = function(event) {\n      console.log(event.point);\n\n      if(event.point.isInside(drawing.children[1].bounds)) {\n        console.log('incubation');\n        showModal();\n      } else if (event.point.isInside(drawing.children[2].bounds)) {\n        console.log('growout1');\n        this.showModal();\n      } else if (event.point.isInside(drawing.children[3].bounds)) {\n        console.log('growout2');\n        this.showModal();\n      } else if (event.point.isInside(drawing.children[4].bounds)) {\n        console.log('breeding');\n        this.showModal();\n      }\n    }\n  }\n\n  showModal() {\n    this.setState({ showModal: true });\n  }\n\n  hideModal() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <div id='canvasDiv'>\n        <canvas id='floorplanCanvas' height='300' hidden></canvas>\n      </div>\n    );\n  }\n}\n","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\n\nclass Header extends Component {\n  render() {\n    return (\n      <Navbar staticTop={true}>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <a href=\"#\">The Hive | Colony Farm</a>\n          </Navbar.Brand>\n        </Navbar.Header>\n        <Navbar.Text>\n          <AccountsUIWrapper />\n        </Navbar.Text>\n      </Navbar>\n    )\n  }\n}\n\nHeader.propTypes = {\n  currentUser: PropTypes.object,\n}\n\nexport default createContainer(() => {\n  return {\n    currentUser: Meteor.user(),\n  }\n}, Header);\n","import React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Line } from 'react-chartjs';\nimport { AreaData } from '../api/areaData.js';\n\nexport default class InputChart extends Component {\n\n  formatData() {\n    return {\n      size: this.props.data.length,\n      createdAt: this.props.data.map((area) => area.createdAt),\n      water: this.props.data.map((area) => area.water),\n      energy: this.props.data.map((area) => area.energy),\n      feed: this.props.data.map((area) => area.feed),\n    }\n  }\n\n  formatInputs() {\n    return {\n      labels: Array(this.formatData().size).fill(''),\n      datasets: [\n        {\n          label: 'feed',\n          backgroundColor: 'rgba(167, 250, 210, 0.5)',\n          borderColor: 'rgba(167, 250, 210, 0.8)',\n          pointColor: 'rgba(167, 250, 210, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().feed,\n          yAxisID: 'y-axis-0'\n        },\n        {\n          label: 'water',\n          backgroundColor: 'rgba(167, 238, 250, 0.5)',\n          borderColor: 'rgba(167, 213, 250, 0.8)',\n          pointColor: 'rgba(167, 213, 250, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().water,\n          yAxisID: 'y-axis-1'\n        },\n        {\n          label: 'energy',\n          backgroundColor: 'rgba(250, 195, 168, 0.5)',\n          borderColor: 'rgba(250, 195, 168, 0.8)',\n          pointColor: 'rgba(250, 195, 168, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().energy,\n          yAxisID: 'y-axis-2'\n        },\n      ],\n    }\n  }\n\n  chartOptions() {\n    return {\n      title: {\n        display: false,\n        text: this.props.title,\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            id: 'y-axis-0',\n            position: 'left',\n            scaleLabel: {\n              display: true,\n              labelString: 'lbs',\n            },\n            ticks: {\n              min: 0,\n              max: 500,\n              stepSize: 50\n            }\n          },\n          {\n            id: 'y-axis-1',\n            position: 'right',\n            scaleLabel: {\n              display: true,\n              labelString: 'gal',\n            },\n            ticks: {\n              min: 0,\n              max: 100,\n              stepSize: 10\n            }\n          },\n          {\n            id: 'y-axis-2',\n            position: 'right',\n            scaleLabel: {\n              display: true,\n              labelString: 'kWh',\n            },\n            ticks: {\n              min: 0,\n              max: 100,\n              stepSize: 10\n            }\n          },\n        ]\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Line data={this.formatInputs()} className='unichart' options={this.chartOptions()} />\n    );\n  }\n}\n\nInputChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Line } from 'react-chartjs';\nimport { AreaData } from '../api/areaData.js';\n\nexport default class YieldChart extends Component {\n\n  formatData() {\n    return {\n      size: this.props.data.length,\n      createdAt: this.props.data.map((area) => area.createdAt),\n      insects: this.props.data.map((area) => area.insects),\n      eggs: this.props.data.map((area) => area.eggs),\n      dead: this.props.data.map((area) => area.dead),\n      frass: this.props.data.map((area) => area.frass),\n    }\n  }\n\n  formatWeights() {\n    return {\n      labels: Array(this.formatData().size).fill(''),\n      datasets: [\n        {\n          label: 'insects',\n          backgroundColor: 'rgba(167, 250, 210, 0.5)',\n          borderColor: 'rgba(167, 250, 210, 0.8)',\n          pointColor: 'rgba(167, 250, 210, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().insects,\n          yAxisID: 'y-axis-0'\n        },\n        {\n          label: 'eggs',\n          backgroundColor: 'rgba(167, 238, 250, 0.5)',\n          borderColor: 'rgba(167, 213, 250, 0.8)',\n          pointColor: 'rgba(167, 213, 250, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().eggs,\n          yAxisID: 'y-axis-0'\n        },\n        {\n          label: 'dead',\n          backgroundColor: 'rgba(250, 195, 168, 0.5)',\n          borderColor: 'rgba(250, 195, 168, 0.8)',\n          pointColor: 'rgba(250, 195, 168, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().dead,\n          yAxisID: 'y-axis-0'\n        },\n        {\n          label: 'frass',\n          backgroundColor: 'rgba(194, 167, 250, 0.5)',\n          borderColor: 'rgba(194, 167, 250, 0.8)',\n          pointColor: 'rgba(194, 167, 250, 1)',\n          pointStrokeColor: 'rgb(255, 255, 255)',\n          data: this.formatData().frass,\n          yAxisID: 'y-axis-0'\n        },\n      ],\n    }\n  }\n\n  chartOptions() {\n    return {\n      title: {\n        display: false,\n        text: this.props.title,\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            id: 'y-axis-0',\n            position: \"left\",\n            scaleLabel: {\n              display: true,\n              labelString: 'lbs',\n            },\n            ticks: {\n              min: 0,\n              max: 1000,\n              stepSize: 100\n            }\n          },\n        ]\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Line data={this.formatWeights()} className='unichart' options={this.chartOptions()} />\n    );\n  }\n}\n\nYieldChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import { ClimateData } from '../imports/api/climateData.js';\n\nif (Meteor.isServer) {\n  var Api = new Restivus({\n    useDefaultAuth: true,\n    prettyJson: true,\n\n  });\n\n  Api.addCollection(ClimateData, {\n    authRequired: false,\n    excludedEndpoints: ['deleteAll', 'delete'],\n    endpoints: {\n      post: {\n        authRequired: true,\n        action: function () {\n          var data = ClimateData.insert({\n            temp: this.bodyParams.temp,\n            humidity: this.bodyParams.humidity,\n            area: this.bodyParams.area,\n            createdAt: new Date(),\n            username: this.user.username,\n          });\n          return true;\n        }\n      }\n    }\n  });\n\n  Api.addCollection(Meteor.users, {\n    excludedEndpoints: ['getAll', 'put'],\n    routeOptions: {\n      authRequired: true\n    },\n    endpoints: {\n      post: {\n        authRequired: false\n      },\n      delete: {\n        roleRequired: 'admin'\n      }\n    }\n  });\n}\n"]}